{"version":3,"file":"static/js/6214.f8bb61fe.chunk.js","mappings":"wKAAO,MAAMA,EACTC,WAAAA,GACIC,KAAKC,IAAM,GACXD,KAAKE,KAAM,CACf,CACAC,IAAAA,CAAKC,GACIA,SAGYC,IAAbD,EAAKF,MACLF,KAAKE,IAAME,EAAKF,UAEAG,IAAhBD,EAAKE,SACLN,KAAKM,OAASF,EAAKE,aAELD,IAAdD,EAAKG,OACLP,KAAKO,KAAOH,EAAKG,WAEKF,IAAtBD,EAAKI,eACLR,KAAKQ,aAAeJ,EAAKI,mBAEZH,IAAbD,EAAKH,MACLD,KAAKC,IAAMG,EAAKH,UAEDI,IAAfD,EAAKK,QACLT,KAAKS,MAAQL,EAAKK,OAE1B,EC1BG,MAAMC,EACTX,WAAAA,CAAYY,GACRX,KAAKY,GAAK,iBACVZ,KAAKa,QAAUF,CACnB,CACA,eAAMG,GAEF,aADMC,QAAQC,UACP,CAAC,CACZ,CACAC,WAAAA,CAAYC,EAASC,GACjB,GAAW,OAANA,QAAM,IAANA,IAAAA,EAAQC,QACT,OAECF,EAAQE,UACTF,EAAQE,QAAU,IAEtB,MAAMC,EAAiBH,EAAQE,QAC/B,IAAK,MAAME,KAAQH,EAAOC,QAAS,CAC/B,MAAMG,EAAWF,EAAeG,MAAMC,GAAMA,EAAElB,OAASe,EAAKf,MAAQkB,EAAExB,MAAQqB,EAAKrB,MACnF,GAAIsB,EACAA,EAASpB,KAAKmB,OAEb,CACD,MAAMF,EAAU,IAAItB,EACpBsB,EAAQjB,KAAKmB,GACbD,EAAeK,KAAKN,EACxB,CACJ,CACJ,CACAO,WAAAA,GACI,OAAO,CACX,E","sources":["../../node_modules/@tsparticles/shape-image/browser/Options/Classes/Preload.js","../../node_modules/@tsparticles/shape-image/browser/ImagePreloader.js"],"sourcesContent":["export class Preload {\n    constructor() {\n        this.src = \"\";\n        this.gif = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.gif !== undefined) {\n            this.gif = data.gif;\n        }\n        if (data.height !== undefined) {\n            this.height = data.height;\n        }\n        if (data.name !== undefined) {\n            this.name = data.name;\n        }\n        if (data.replaceColor !== undefined) {\n            this.replaceColor = data.replaceColor;\n        }\n        if (data.src !== undefined) {\n            this.src = data.src;\n        }\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n    }\n}\n","import { Preload } from \"./Options/Classes/Preload.js\";\nexport class ImagePreloaderPlugin {\n    constructor(engine) {\n        this.id = \"imagePreloader\";\n        this._engine = engine;\n    }\n    async getPlugin() {\n        await Promise.resolve();\n        return {};\n    }\n    loadOptions(options, source) {\n        if (!source?.preload) {\n            return;\n        }\n        if (!options.preload) {\n            options.preload = [];\n        }\n        const preloadOptions = options.preload;\n        for (const item of source.preload) {\n            const existing = preloadOptions.find((t) => t.name === item.name || t.src === item.src);\n            if (existing) {\n                existing.load(item);\n            }\n            else {\n                const preload = new Preload();\n                preload.load(item);\n                preloadOptions.push(preload);\n            }\n        }\n    }\n    needsPlugin() {\n        return true;\n    }\n}\n"],"names":["Preload","constructor","this","src","gif","load","data","undefined","height","name","replaceColor","width","ImagePreloaderPlugin","engine","id","_engine","getPlugin","Promise","resolve","loadOptions","options","source","preload","preloadOptions","item","existing","find","t","push","needsPlugin"],"sourceRoot":""}