/*! For license information please see tsparticles.shape.text.min.js.LICENSE.txt */
!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t(require("@tsparticles/engine"));else if("function"==typeof define&&define.amd)define(["@tsparticles/engine"],t);else{var o="object"==typeof exports?t(require("@tsparticles/engine")):t(e.window);for(var r in o)("object"==typeof exports?exports:e)[r]=o[r]}}(this,(e=>(()=>{var t={997:(e,t,o)=>{o.d(t,{TextDrawer:()=>s,u:()=>l});var r=o(303);const n=2,a=.5;function i(e,t,o,r,i,l){const s={x:-(t.length*o*a),y:o*a},p=o*n;l?e.fillText(t,s.x,s.y+p*i):e.strokeText(t,s.x,s.y+p*i)}const l=["text","character","char","multiline-text"];class s{draw(e){!function(e){const{context:t,particle:o,radius:a,opacity:l}=e,s=o.shapeData;if(!s)return;const p=s.value;if(void 0===p)return;void 0===o.text&&(o.text=(0,r.itemFromSingleOrMultiple)(p,o.randomIndexData));const c=o.text,d=s.style??"",f=s.weight??"400",u=Math.round(a)*n,x=s.font??"Verdana",y=o.shapeFill,h=c?.split("\n");if(h){t.font=`${d} ${f} ${u}px "${x}"`,t.globalAlpha=l;for(let e=0;e<h.length;e++)i(t,h[e],a,0,e,y);t.globalAlpha=1}}(e)}async init(e){const t=e.actualOptions;if(l.find((e=>(0,r.isInArray)(e,t.particles.shape.type)))){const e=l.map((e=>t.particles.shape.options[e])).find((e=>!!e)),o=[];(0,r.executeOnSingleOrMultiple)(e,(e=>{o.push((0,r.loadFont)(e.font,e.weight))})),await Promise.all(o)}}particleInit(e,t){if(!t.shape||!l.includes(t.shape))return;const o=t.shapeData;if(void 0===o)return;const n=o.value;void 0!==n&&(t.text=(0,r.itemFromSingleOrMultiple)(n,t.randomIndexData))}}},303:t=>{t.exports=e}},o={};function r(e){var n=o[e];if(void 0!==n)return n.exports;var a=o[e]={exports:{}};return t[e](a,a.exports,r),a.exports}r.d=(e,t)=>{for(var o in t)r.o(t,o)&&!r.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var n={};return(()=>{r.r(n),r.d(n,{loadTextShape:()=>t});var e=r(997);async function t(t,o=!0){const{TextDrawer:n}=await Promise.resolve().then(r.bind(r,997));await t.addShape(e.u,new n,o)}})(),n})()));