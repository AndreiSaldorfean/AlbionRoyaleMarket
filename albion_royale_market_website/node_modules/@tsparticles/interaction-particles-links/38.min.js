/*! For license information please see 38.min.js.LICENSE.txt */
(this.webpackChunk_tsparticles_interaction_particles_links=this.webpackChunk_tsparticles_interaction_particles_links||[]).push([[38],{38:(i,t,n)=>{n.d(t,{Linker:()=>l});var s=n(303);class e extends s.Circle{constructor(i,t,n,s){super(i,t,n),this.canvasSize=s,this.canvasSize={...s}}contains(i){const{width:t,height:n}=this.canvasSize,{x:s,y:e}=i;return super.contains(i)||super.contains({x:s-t,y:e})||super.contains({x:s-t,y:e-n})||super.contains({x:s,y:e-n})}intersects(i){if(super.intersects(i))return!0;const t=i,n=i,e={x:i.position.x-this.canvasSize.width,y:i.position.y-this.canvasSize.height};if(void 0!==n.radius){const i=new s.Circle(e.x,e.y,2*n.radius);return super.intersects(i)}if(void 0!==t.size){const i=new s.Rectangle(e.x,e.y,2*t.size.width,2*t.size.height);return super.intersects(i)}return!1}}var o=n(983);const r=0,a=0;function c(i,t,n,e,o){const{dx:r,dy:a,distance:c}=(0,s.getDistances)(i,t);if(!o||c<=n)return c;const l={x:Math.abs(r),y:Math.abs(a)},h=Math.min(l.x,e.width-l.x),p=Math.min(l.y,e.height-l.y);return Math.sqrt(h**2+p**2)}class l extends s.ParticlesInteractorBase{constructor(i){super(i),this._setColor=i=>{if(!i.options.links)return;const t=this.linkContainer,n=i.options.links;let e=void 0===n.id?t.particles.linksColor:t.particles.linksColors.get(n.id);if(e)return;const o=n.color;e=(0,s.getLinkRandomColor)(o,n.blink,n.consent),void 0===n.id?t.particles.linksColor=e:t.particles.linksColors.set(n.id,e)},this.linkContainer=i}clear(){}init(){this.linkContainer.particles.linksColor=void 0,this.linkContainer.particles.linksColors=new Map}interact(i){if(!i.options.links)return;i.links=[];const t=i.getPosition(),n=this.container,o=n.canvas.size;if(t.x<r||t.y<a||t.x>o.width||t.y>o.height)return;const l=i.options.links,h=l.opacity,p=i.retina.linksDistance??0,d=l.warp;let k;k=d?new e(t.x,t.y,p,o):new s.Circle(t.x,t.y,p);const u=n.particles.quadTree.query(k);for(const n of u){const s=n.options.links;if(i===n||!s?.enable||l.id!==s.id||n.spawning||n.destroyed||!n.links||i.links.some((i=>i.destination===n))||n.links.some((t=>t.destination===i)))continue;const e=n.getPosition();if(e.x<r||e.y<a||e.x>o.width||e.y>o.height)continue;const k=c(t,e,p,o,d&&s.warp);if(k>p)continue;const u=(1-k/p)*h;this._setColor(i),i.links.push({destination:n,opacity:u})}}isEnabled(i){return!!i.options.links?.enable}loadParticlesOptions(i,...t){i.links||(i.links=new o.q);for(const n of t)i.links.load(n?.links)}reset(){}}}}]);