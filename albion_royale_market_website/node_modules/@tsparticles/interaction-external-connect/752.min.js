/*! For license information please see 752.min.js.LICENSE.txt */
(this.webpackChunk_tsparticles_interaction_external_connect=this.webpackChunk_tsparticles_interaction_external_connect||[]).push([[752],{752:(t,n,e)=>{e.d(n,{Connector:()=>l});var o=e(303),i=e(528);const c=0,a=1;function s(t,n,e,i){const s=t.actualOptions.interactivity.modes.connect;if(s)return function(t,n,e,i){const s=Math.floor(e.getRadius()/n.getRadius()),r=n.getFillColor(),l=e.getFillColor();if(!r||!l)return;const d=n.getPosition(),u=e.getPosition(),p=(0,o.colorMix)(r,l,n.getRadius(),e.getRadius()),y=t.createLinearGradient(d.x,d.y,u.x,u.y);return y.addColorStop(c,(0,o.getStyleFromHsl)(r,i)),y.addColorStop((0,o.clamp)(s,c,a),(0,o.getStyleFromRgb)(p,i)),y.addColorStop(a,(0,o.getStyleFromHsl)(l,i)),y}(n,e,i,s.links.opacity)}function r(t,n,e){t.canvas.draw((i=>{const c=s(t,i,n,e);if(!c)return;const a=n.getPosition(),r=e.getPosition();!function(t,n,e,i,c){(0,o.drawLine)(t,i,c),t.lineWidth=n,t.strokeStyle=e,t.stroke()}(i,n.retina.linksWidth??0,c,a,r)}))}class l extends o.ExternalInteractorBase{constructor(t){super(t)}clear(){}init(){const t=this.container,n=t.actualOptions.interactivity.modes.connect;n&&(t.retina.connectModeDistance=n.distance*t.retina.pixelRatio,t.retina.connectModeRadius=n.radius*t.retina.pixelRatio)}interact(){const t=this.container;if(t.actualOptions.interactivity.events.onHover.enable&&"pointermove"===t.interactivity.status){const n=t.interactivity.mouse.position,{connectModeDistance:e,connectModeRadius:o}=t.retina;if(!e||e<0||!o||o<0||!n)return;const i=Math.abs(o),c=t.particles.quadTree.queryCircle(n,i,(t=>this.isEnabled(t)));c.forEach(((n,o)=>{const i=n.getPosition();for(const a of c.slice(o+1)){const o=a.getPosition(),c=Math.abs(e),s=Math.abs(i.x-o.x),l=Math.abs(i.y-o.y);s<c&&l<c&&r(t,n,a)}}))}}isEnabled(t){const n=this.container,e=n.interactivity.mouse,i=(t?.interactivity??n.actualOptions.interactivity).events;return!(!i.onHover.enable||!e.position)&&(0,o.isInArray)("connect",i.onHover.mode)}loadModeOptions(t,...n){t.connect||(t.connect=new i.d);for(const e of n)t.connect.load(e?.connect)}reset(){}}}}]);