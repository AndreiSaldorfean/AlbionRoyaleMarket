{"ast":null,"code":"import { errorPrefix, millisecondsToSeconds } from \"./Utils/Constants.js\";\nimport { getLogger, safeIntersectionObserver } from \"../Utils/Utils.js\";\nimport { Canvas } from \"./Canvas.js\";\nimport { EventListeners } from \"./Utils/EventListeners.js\";\nimport { Options } from \"../Options/Classes/Options.js\";\nimport { Particles } from \"./Particles.js\";\nimport { Retina } from \"./Retina.js\";\nimport { getRangeValue } from \"../Utils/NumberUtils.js\";\nimport { loadOptions } from \"../Utils/OptionsUtils.js\";\nfunction guardCheck(container) {\n  return container && !container.destroyed;\n}\nconst defaultFps = 60;\nfunction initDelta(value) {\n  let fpsLimit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultFps;\n  let smooth = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  return {\n    value,\n    factor: smooth ? defaultFps / fpsLimit : defaultFps * value / millisecondsToSeconds\n  };\n}\nfunction loadContainerOptions(engine, container) {\n  const options = new Options(engine, container);\n  for (var _len = arguments.length, sourceOptionsArr = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    sourceOptionsArr[_key - 2] = arguments[_key];\n  }\n  loadOptions(options, ...sourceOptionsArr);\n  return options;\n}\nexport class Container {\n  constructor(engine, id, sourceOptions) {\n    this._intersectionManager = entries => {\n      if (!guardCheck(this) || !this.actualOptions.pauseOnOutsideViewport) {\n        return;\n      }\n      for (const entry of entries) {\n        if (entry.target !== this.interactivity.element) {\n          continue;\n        }\n        if (entry.isIntersecting) {\n          void this.play();\n        } else {\n          this.pause();\n        }\n      }\n    };\n    this._nextFrame = timestamp => {\n      try {\n        var _this$_lastFrameTime;\n        if (!this._smooth && this._lastFrameTime !== undefined && timestamp < this._lastFrameTime + millisecondsToSeconds / this.fpsLimit) {\n          this.draw(false);\n          return;\n        }\n        (_this$_lastFrameTime = this._lastFrameTime) !== null && _this$_lastFrameTime !== void 0 ? _this$_lastFrameTime : this._lastFrameTime = timestamp;\n        const delta = initDelta(timestamp - this._lastFrameTime, this.fpsLimit, this._smooth);\n        this.addLifeTime(delta.value);\n        this._lastFrameTime = timestamp;\n        if (delta.value > millisecondsToSeconds) {\n          this.draw(false);\n          return;\n        }\n        this.particles.draw(delta);\n        if (!this.alive()) {\n          this.destroy();\n          return;\n        }\n        if (this.animationStatus) {\n          this.draw(false);\n        }\n      } catch (e) {\n        getLogger().error(\"\".concat(errorPrefix, \" in animation loop\"), e);\n      }\n    };\n    this._engine = engine;\n    this.id = Symbol(id);\n    this.fpsLimit = 120;\n    this._smooth = false;\n    this._delay = 0;\n    this._duration = 0;\n    this._lifeTime = 0;\n    this._firstStart = true;\n    this.started = false;\n    this.destroyed = false;\n    this._paused = true;\n    this._lastFrameTime = 0;\n    this.zLayers = 100;\n    this.pageHidden = false;\n    this._sourceOptions = sourceOptions;\n    this._initialSourceOptions = sourceOptions;\n    this.retina = new Retina(this);\n    this.canvas = new Canvas(this);\n    this.particles = new Particles(this._engine, this);\n    this.pathGenerators = new Map();\n    this.interactivity = {\n      mouse: {\n        clicking: false,\n        inside: false\n      }\n    };\n    this.plugins = new Map();\n    this.effectDrawers = new Map();\n    this.shapeDrawers = new Map();\n    this._options = loadContainerOptions(this._engine, this);\n    this.actualOptions = loadContainerOptions(this._engine, this);\n    this._eventListeners = new EventListeners(this);\n    this._intersectionObserver = safeIntersectionObserver(entries => this._intersectionManager(entries));\n    this._engine.dispatchEvent(\"containerBuilt\", {\n      container: this\n    });\n  }\n  get animationStatus() {\n    return !this._paused && !this.pageHidden && guardCheck(this);\n  }\n  get options() {\n    return this._options;\n  }\n  get sourceOptions() {\n    return this._sourceOptions;\n  }\n  addClickHandler(callback) {\n    if (!guardCheck(this)) {\n      return;\n    }\n    const el = this.interactivity.element;\n    if (!el) {\n      return;\n    }\n    const clickOrTouchHandler = (e, pos, radius) => {\n      if (!guardCheck(this)) {\n        return;\n      }\n      const pxRatio = this.retina.pixelRatio,\n        posRetina = {\n          x: pos.x * pxRatio,\n          y: pos.y * pxRatio\n        },\n        particles = this.particles.quadTree.queryCircle(posRetina, radius * pxRatio);\n      callback(e, particles);\n    };\n    const clickHandler = e => {\n      if (!guardCheck(this)) {\n        return;\n      }\n      const mouseEvent = e,\n        pos = {\n          x: mouseEvent.offsetX || mouseEvent.clientX,\n          y: mouseEvent.offsetY || mouseEvent.clientY\n        },\n        radius = 1;\n      clickOrTouchHandler(e, pos, radius);\n    };\n    const touchStartHandler = () => {\n      if (!guardCheck(this)) {\n        return;\n      }\n      touched = true;\n      touchMoved = false;\n    };\n    const touchMoveHandler = () => {\n      if (!guardCheck(this)) {\n        return;\n      }\n      touchMoved = true;\n    };\n    const touchEndHandler = e => {\n      if (!guardCheck(this)) {\n        return;\n      }\n      if (touched && !touchMoved) {\n        const touchEvent = e;\n        const lengthOffset = 1;\n        let lastTouch = touchEvent.touches[touchEvent.touches.length - lengthOffset];\n        if (!lastTouch) {\n          lastTouch = touchEvent.changedTouches[touchEvent.changedTouches.length - lengthOffset];\n          if (!lastTouch) {\n            return;\n          }\n        }\n        const element = this.canvas.element,\n          canvasRect = element ? element.getBoundingClientRect() : undefined,\n          minCoordinate = 0,\n          pos = {\n            x: lastTouch.clientX - (canvasRect ? canvasRect.left : minCoordinate),\n            y: lastTouch.clientY - (canvasRect ? canvasRect.top : minCoordinate)\n          };\n        clickOrTouchHandler(e, pos, Math.max(lastTouch.radiusX, lastTouch.radiusY));\n      }\n      touched = false;\n      touchMoved = false;\n    };\n    const touchCancelHandler = () => {\n      if (!guardCheck(this)) {\n        return;\n      }\n      touched = false;\n      touchMoved = false;\n    };\n    let touched = false,\n      touchMoved = false;\n    el.addEventListener(\"click\", clickHandler);\n    el.addEventListener(\"touchstart\", touchStartHandler);\n    el.addEventListener(\"touchmove\", touchMoveHandler);\n    el.addEventListener(\"touchend\", touchEndHandler);\n    el.addEventListener(\"touchcancel\", touchCancelHandler);\n  }\n  addLifeTime(value) {\n    this._lifeTime += value;\n  }\n  addPath(key, generator) {\n    let override = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    if (!guardCheck(this) || !override && this.pathGenerators.has(key)) {\n      return false;\n    }\n    this.pathGenerators.set(key, generator);\n    return true;\n  }\n  alive() {\n    return !this._duration || this._lifeTime <= this._duration;\n  }\n  destroy() {\n    if (!guardCheck(this)) {\n      return;\n    }\n    this.stop();\n    this.particles.destroy();\n    this.canvas.destroy();\n    for (const [, effectDrawer] of this.effectDrawers) {\n      var _effectDrawer$destroy;\n      (_effectDrawer$destroy = effectDrawer.destroy) === null || _effectDrawer$destroy === void 0 || _effectDrawer$destroy.call(effectDrawer, this);\n    }\n    for (const [, shapeDrawer] of this.shapeDrawers) {\n      var _shapeDrawer$destroy;\n      (_shapeDrawer$destroy = shapeDrawer.destroy) === null || _shapeDrawer$destroy === void 0 || _shapeDrawer$destroy.call(shapeDrawer, this);\n    }\n    for (const key of this.effectDrawers.keys()) {\n      this.effectDrawers.delete(key);\n    }\n    for (const key of this.shapeDrawers.keys()) {\n      this.shapeDrawers.delete(key);\n    }\n    this._engine.clearPlugins(this);\n    this.destroyed = true;\n    const mainArr = this._engine.dom(),\n      idx = mainArr.findIndex(t => t === this),\n      minIndex = 0;\n    if (idx >= minIndex) {\n      const deleteCount = 1;\n      mainArr.splice(idx, deleteCount);\n    }\n    this._engine.dispatchEvent(\"containerDestroyed\", {\n      container: this\n    });\n  }\n  draw(force) {\n    if (!guardCheck(this)) {\n      return;\n    }\n    let refreshTime = force;\n    const frame = timestamp => {\n      if (refreshTime) {\n        this._lastFrameTime = undefined;\n        refreshTime = false;\n      }\n      this._nextFrame(timestamp);\n    };\n    this._drawAnimationFrame = requestAnimationFrame(timestamp => frame(timestamp));\n  }\n  async export(type) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    for (const [, plugin] of this.plugins) {\n      if (!plugin.export) {\n        continue;\n      }\n      const res = await plugin.export(type, options);\n      if (!res.supported) {\n        continue;\n      }\n      return res.blob;\n    }\n    getLogger().error(\"\".concat(errorPrefix, \" - Export plugin with type \").concat(type, \" not found\"));\n  }\n  handleClickMode(mode) {\n    if (!guardCheck(this)) {\n      return;\n    }\n    this.particles.handleClickMode(mode);\n    for (const [, plugin] of this.plugins) {\n      var _plugin$handleClickMo;\n      (_plugin$handleClickMo = plugin.handleClickMode) === null || _plugin$handleClickMo === void 0 || _plugin$handleClickMo.call(plugin, mode);\n    }\n  }\n  async init() {\n    if (!guardCheck(this)) {\n      return;\n    }\n    const effects = this._engine.getSupportedEffects();\n    for (const type of effects) {\n      const drawer = this._engine.getEffectDrawer(type);\n      if (drawer) {\n        this.effectDrawers.set(type, drawer);\n      }\n    }\n    const shapes = this._engine.getSupportedShapes();\n    for (const type of shapes) {\n      const drawer = this._engine.getShapeDrawer(type);\n      if (drawer) {\n        this.shapeDrawers.set(type, drawer);\n      }\n    }\n    await this.particles.initPlugins();\n    this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\n    this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n    const availablePlugins = await this._engine.getAvailablePlugins(this);\n    for (const [id, plugin] of availablePlugins) {\n      this.plugins.set(id, plugin);\n    }\n    this.retina.init();\n    await this.canvas.init();\n    this.updateActualOptions();\n    this.canvas.initBackground();\n    this.canvas.resize();\n    this.zLayers = this.actualOptions.zLayers;\n    this._duration = getRangeValue(this.actualOptions.duration) * millisecondsToSeconds;\n    this._delay = getRangeValue(this.actualOptions.delay) * millisecondsToSeconds;\n    this._lifeTime = 0;\n    const defaultFpsLimit = 120,\n      minFpsLimit = 0;\n    this.fpsLimit = this.actualOptions.fpsLimit > minFpsLimit ? this.actualOptions.fpsLimit : defaultFpsLimit;\n    this._smooth = this.actualOptions.smooth;\n    for (const [, drawer] of this.effectDrawers) {\n      var _drawer$init;\n      await ((_drawer$init = drawer.init) === null || _drawer$init === void 0 ? void 0 : _drawer$init.call(drawer, this));\n    }\n    for (const [, drawer] of this.shapeDrawers) {\n      var _drawer$init2;\n      await ((_drawer$init2 = drawer.init) === null || _drawer$init2 === void 0 ? void 0 : _drawer$init2.call(drawer, this));\n    }\n    for (const [, plugin] of this.plugins) {\n      var _plugin$init;\n      await ((_plugin$init = plugin.init) === null || _plugin$init === void 0 ? void 0 : _plugin$init.call(plugin));\n    }\n    this._engine.dispatchEvent(\"containerInit\", {\n      container: this\n    });\n    await this.particles.init();\n    this.particles.setDensity();\n    for (const [, plugin] of this.plugins) {\n      var _plugin$particlesSetu;\n      (_plugin$particlesSetu = plugin.particlesSetup) === null || _plugin$particlesSetu === void 0 || _plugin$particlesSetu.call(plugin);\n    }\n    this._engine.dispatchEvent(\"particlesSetup\", {\n      container: this\n    });\n  }\n  async loadTheme(name) {\n    if (!guardCheck(this)) {\n      return;\n    }\n    this._currentTheme = name;\n    await this.refresh();\n  }\n  pause() {\n    if (!guardCheck(this)) {\n      return;\n    }\n    if (this._drawAnimationFrame !== undefined) {\n      cancelAnimationFrame(this._drawAnimationFrame);\n      delete this._drawAnimationFrame;\n    }\n    if (this._paused) {\n      return;\n    }\n    for (const [, plugin] of this.plugins) {\n      var _plugin$pause;\n      (_plugin$pause = plugin.pause) === null || _plugin$pause === void 0 || _plugin$pause.call(plugin);\n    }\n    if (!this.pageHidden) {\n      this._paused = true;\n    }\n    this._engine.dispatchEvent(\"containerPaused\", {\n      container: this\n    });\n  }\n  play(force) {\n    if (!guardCheck(this)) {\n      return;\n    }\n    const needsUpdate = this._paused || force;\n    if (this._firstStart && !this.actualOptions.autoPlay) {\n      this._firstStart = false;\n      return;\n    }\n    if (this._paused) {\n      this._paused = false;\n    }\n    if (needsUpdate) {\n      for (const [, plugin] of this.plugins) {\n        if (plugin.play) {\n          plugin.play();\n        }\n      }\n    }\n    this._engine.dispatchEvent(\"containerPlay\", {\n      container: this\n    });\n    this.draw(needsUpdate !== null && needsUpdate !== void 0 ? needsUpdate : false);\n  }\n  async refresh() {\n    if (!guardCheck(this)) {\n      return;\n    }\n    this.stop();\n    return this.start();\n  }\n  async reset() {\n    if (!guardCheck(this)) {\n      return;\n    }\n    this._initialSourceOptions = undefined;\n    this._options = loadContainerOptions(this._engine, this);\n    this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n    return this.refresh();\n  }\n  async start() {\n    if (!guardCheck(this) || this.started) {\n      return;\n    }\n    await this.init();\n    this.started = true;\n    await new Promise(resolve => {\n      const start = async () => {\n        this._eventListeners.addListeners();\n        if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n          this._intersectionObserver.observe(this.interactivity.element);\n        }\n        for (const [, plugin] of this.plugins) {\n          var _plugin$start;\n          await ((_plugin$start = plugin.start) === null || _plugin$start === void 0 ? void 0 : _plugin$start.call(plugin));\n        }\n        this._engine.dispatchEvent(\"containerStarted\", {\n          container: this\n        });\n        this.play();\n        resolve();\n      };\n      this._delayTimeout = setTimeout(() => void start(), this._delay);\n    });\n  }\n  stop() {\n    if (!guardCheck(this) || !this.started) {\n      return;\n    }\n    if (this._delayTimeout) {\n      clearTimeout(this._delayTimeout);\n      delete this._delayTimeout;\n    }\n    this._firstStart = true;\n    this.started = false;\n    this._eventListeners.removeListeners();\n    this.pause();\n    this.particles.clear();\n    this.canvas.stop();\n    if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n      this._intersectionObserver.unobserve(this.interactivity.element);\n    }\n    for (const [, plugin] of this.plugins) {\n      var _plugin$stop;\n      (_plugin$stop = plugin.stop) === null || _plugin$stop === void 0 || _plugin$stop.call(plugin);\n    }\n    for (const key of this.plugins.keys()) {\n      this.plugins.delete(key);\n    }\n    this._sourceOptions = this._options;\n    this._engine.dispatchEvent(\"containerStopped\", {\n      container: this\n    });\n  }\n  updateActualOptions() {\n    this.actualOptions.responsive = [];\n    const newMaxWidth = this.actualOptions.setResponsive(this.canvas.size.width, this.retina.pixelRatio, this._options);\n    this.actualOptions.setTheme(this._currentTheme);\n    if (this._responsiveMaxWidth === newMaxWidth) {\n      return false;\n    }\n    this._responsiveMaxWidth = newMaxWidth;\n    return true;\n  }\n}","map":{"version":3,"names":["errorPrefix","millisecondsToSeconds","getLogger","safeIntersectionObserver","Canvas","EventListeners","Options","Particles","Retina","getRangeValue","loadOptions","guardCheck","container","destroyed","defaultFps","initDelta","value","fpsLimit","arguments","length","undefined","smooth","factor","loadContainerOptions","engine","options","_len","sourceOptionsArr","Array","_key","Container","constructor","id","sourceOptions","_intersectionManager","entries","actualOptions","pauseOnOutsideViewport","entry","target","interactivity","element","isIntersecting","play","pause","_nextFrame","timestamp","_this$_lastFrameTime","_smooth","_lastFrameTime","draw","delta","addLifeTime","particles","alive","destroy","animationStatus","e","error","concat","_engine","Symbol","_delay","_duration","_lifeTime","_firstStart","started","_paused","zLayers","pageHidden","_sourceOptions","_initialSourceOptions","retina","canvas","pathGenerators","Map","mouse","clicking","inside","plugins","effectDrawers","shapeDrawers","_options","_eventListeners","_intersectionObserver","dispatchEvent","addClickHandler","callback","el","clickOrTouchHandler","pos","radius","pxRatio","pixelRatio","posRetina","x","y","quadTree","queryCircle","clickHandler","mouseEvent","offsetX","clientX","offsetY","clientY","touchStartHandler","touched","touchMoved","touchMoveHandler","touchEndHandler","touchEvent","lengthOffset","lastTouch","touches","changedTouches","canvasRect","getBoundingClientRect","minCoordinate","left","top","Math","max","radiusX","radiusY","touchCancelHandler","addEventListener","addPath","key","generator","override","has","set","stop","effectDrawer","_effectDrawer$destroy","call","shapeDrawer","_shapeDrawer$destroy","keys","delete","clearPlugins","mainArr","dom","idx","findIndex","t","minIndex","deleteCount","splice","force","refreshTime","frame","_drawAnimationFrame","requestAnimationFrame","export","type","plugin","res","supported","blob","handleClickMode","mode","_plugin$handleClickMo","init","effects","getSupportedEffects","drawer","getEffectDrawer","shapes","getSupportedShapes","getShapeDrawer","initPlugins","availablePlugins","getAvailablePlugins","updateActualOptions","initBackground","resize","duration","delay","defaultFpsLimit","minFpsLimit","_drawer$init","_drawer$init2","_plugin$init","setDensity","_plugin$particlesSetu","particlesSetup","loadTheme","name","_currentTheme","refresh","cancelAnimationFrame","_plugin$pause","needsUpdate","autoPlay","start","reset","Promise","resolve","addListeners","HTMLElement","observe","_plugin$start","_delayTimeout","setTimeout","clearTimeout","removeListeners","clear","unobserve","_plugin$stop","responsive","newMaxWidth","setResponsive","size","width","setTheme","_responsiveMaxWidth"],"sources":["C:/nginx/html/AlbionRoyaleMarket/albion_royale_market_website/node_modules/@tsparticles/engine/browser/Core/Container.js"],"sourcesContent":["import { errorPrefix, millisecondsToSeconds } from \"./Utils/Constants.js\";\nimport { getLogger, safeIntersectionObserver } from \"../Utils/Utils.js\";\nimport { Canvas } from \"./Canvas.js\";\nimport { EventListeners } from \"./Utils/EventListeners.js\";\nimport { Options } from \"../Options/Classes/Options.js\";\nimport { Particles } from \"./Particles.js\";\nimport { Retina } from \"./Retina.js\";\nimport { getRangeValue } from \"../Utils/NumberUtils.js\";\nimport { loadOptions } from \"../Utils/OptionsUtils.js\";\nfunction guardCheck(container) {\n    return container && !container.destroyed;\n}\nconst defaultFps = 60;\nfunction initDelta(value, fpsLimit = defaultFps, smooth = false) {\n    return {\n        value,\n        factor: smooth ? defaultFps / fpsLimit : (defaultFps * value) / millisecondsToSeconds,\n    };\n}\nfunction loadContainerOptions(engine, container, ...sourceOptionsArr) {\n    const options = new Options(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\nexport class Container {\n    constructor(engine, id, sourceOptions) {\n        this._intersectionManager = (entries) => {\n            if (!guardCheck(this) || !this.actualOptions.pauseOnOutsideViewport) {\n                return;\n            }\n            for (const entry of entries) {\n                if (entry.target !== this.interactivity.element) {\n                    continue;\n                }\n                if (entry.isIntersecting) {\n                    void this.play();\n                }\n                else {\n                    this.pause();\n                }\n            }\n        };\n        this._nextFrame = (timestamp) => {\n            try {\n                if (!this._smooth &&\n                    this._lastFrameTime !== undefined &&\n                    timestamp < this._lastFrameTime + millisecondsToSeconds / this.fpsLimit) {\n                    this.draw(false);\n                    return;\n                }\n                this._lastFrameTime ??= timestamp;\n                const delta = initDelta(timestamp - this._lastFrameTime, this.fpsLimit, this._smooth);\n                this.addLifeTime(delta.value);\n                this._lastFrameTime = timestamp;\n                if (delta.value > millisecondsToSeconds) {\n                    this.draw(false);\n                    return;\n                }\n                this.particles.draw(delta);\n                if (!this.alive()) {\n                    this.destroy();\n                    return;\n                }\n                if (this.animationStatus) {\n                    this.draw(false);\n                }\n            }\n            catch (e) {\n                getLogger().error(`${errorPrefix} in animation loop`, e);\n            }\n        };\n        this._engine = engine;\n        this.id = Symbol(id);\n        this.fpsLimit = 120;\n        this._smooth = false;\n        this._delay = 0;\n        this._duration = 0;\n        this._lifeTime = 0;\n        this._firstStart = true;\n        this.started = false;\n        this.destroyed = false;\n        this._paused = true;\n        this._lastFrameTime = 0;\n        this.zLayers = 100;\n        this.pageHidden = false;\n        this._sourceOptions = sourceOptions;\n        this._initialSourceOptions = sourceOptions;\n        this.retina = new Retina(this);\n        this.canvas = new Canvas(this);\n        this.particles = new Particles(this._engine, this);\n        this.pathGenerators = new Map();\n        this.interactivity = {\n            mouse: {\n                clicking: false,\n                inside: false,\n            },\n        };\n        this.plugins = new Map();\n        this.effectDrawers = new Map();\n        this.shapeDrawers = new Map();\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this);\n        this._eventListeners = new EventListeners(this);\n        this._intersectionObserver = safeIntersectionObserver((entries) => this._intersectionManager(entries));\n        this._engine.dispatchEvent(\"containerBuilt\", { container: this });\n    }\n    get animationStatus() {\n        return !this._paused && !this.pageHidden && guardCheck(this);\n    }\n    get options() {\n        return this._options;\n    }\n    get sourceOptions() {\n        return this._sourceOptions;\n    }\n    addClickHandler(callback) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const el = this.interactivity.element;\n        if (!el) {\n            return;\n        }\n        const clickOrTouchHandler = (e, pos, radius) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const pxRatio = this.retina.pixelRatio, posRetina = {\n                x: pos.x * pxRatio,\n                y: pos.y * pxRatio,\n            }, particles = this.particles.quadTree.queryCircle(posRetina, radius * pxRatio);\n            callback(e, particles);\n        };\n        const clickHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const mouseEvent = e, pos = {\n                x: mouseEvent.offsetX || mouseEvent.clientX,\n                y: mouseEvent.offsetY || mouseEvent.clientY,\n            }, radius = 1;\n            clickOrTouchHandler(e, pos, radius);\n        };\n        const touchStartHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = true;\n            touchMoved = false;\n        };\n        const touchMoveHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touchMoved = true;\n        };\n        const touchEndHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            if (touched && !touchMoved) {\n                const touchEvent = e;\n                const lengthOffset = 1;\n                let lastTouch = touchEvent.touches[touchEvent.touches.length - lengthOffset];\n                if (!lastTouch) {\n                    lastTouch = touchEvent.changedTouches[touchEvent.changedTouches.length - lengthOffset];\n                    if (!lastTouch) {\n                        return;\n                    }\n                }\n                const element = this.canvas.element, canvasRect = element ? element.getBoundingClientRect() : undefined, minCoordinate = 0, pos = {\n                    x: lastTouch.clientX - (canvasRect ? canvasRect.left : minCoordinate),\n                    y: lastTouch.clientY - (canvasRect ? canvasRect.top : minCoordinate),\n                };\n                clickOrTouchHandler(e, pos, Math.max(lastTouch.radiusX, lastTouch.radiusY));\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        const touchCancelHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        let touched = false, touchMoved = false;\n        el.addEventListener(\"click\", clickHandler);\n        el.addEventListener(\"touchstart\", touchStartHandler);\n        el.addEventListener(\"touchmove\", touchMoveHandler);\n        el.addEventListener(\"touchend\", touchEndHandler);\n        el.addEventListener(\"touchcancel\", touchCancelHandler);\n    }\n    addLifeTime(value) {\n        this._lifeTime += value;\n    }\n    addPath(key, generator, override = false) {\n        if (!guardCheck(this) || (!override && this.pathGenerators.has(key))) {\n            return false;\n        }\n        this.pathGenerators.set(key, generator);\n        return true;\n    }\n    alive() {\n        return !this._duration || this._lifeTime <= this._duration;\n    }\n    destroy() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        this.particles.destroy();\n        this.canvas.destroy();\n        for (const [, effectDrawer] of this.effectDrawers) {\n            effectDrawer.destroy?.(this);\n        }\n        for (const [, shapeDrawer] of this.shapeDrawers) {\n            shapeDrawer.destroy?.(this);\n        }\n        for (const key of this.effectDrawers.keys()) {\n            this.effectDrawers.delete(key);\n        }\n        for (const key of this.shapeDrawers.keys()) {\n            this.shapeDrawers.delete(key);\n        }\n        this._engine.clearPlugins(this);\n        this.destroyed = true;\n        const mainArr = this._engine.dom(), idx = mainArr.findIndex((t) => t === this), minIndex = 0;\n        if (idx >= minIndex) {\n            const deleteCount = 1;\n            mainArr.splice(idx, deleteCount);\n        }\n        this._engine.dispatchEvent(\"containerDestroyed\", { container: this });\n    }\n    draw(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        let refreshTime = force;\n        const frame = (timestamp) => {\n            if (refreshTime) {\n                this._lastFrameTime = undefined;\n                refreshTime = false;\n            }\n            this._nextFrame(timestamp);\n        };\n        this._drawAnimationFrame = requestAnimationFrame((timestamp) => frame(timestamp));\n    }\n    async export(type, options = {}) {\n        for (const [, plugin] of this.plugins) {\n            if (!plugin.export) {\n                continue;\n            }\n            const res = await plugin.export(type, options);\n            if (!res.supported) {\n                continue;\n            }\n            return res.blob;\n        }\n        getLogger().error(`${errorPrefix} - Export plugin with type ${type} not found`);\n    }\n    handleClickMode(mode) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.particles.handleClickMode(mode);\n        for (const [, plugin] of this.plugins) {\n            plugin.handleClickMode?.(mode);\n        }\n    }\n    async init() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const effects = this._engine.getSupportedEffects();\n        for (const type of effects) {\n            const drawer = this._engine.getEffectDrawer(type);\n            if (drawer) {\n                this.effectDrawers.set(type, drawer);\n            }\n        }\n        const shapes = this._engine.getSupportedShapes();\n        for (const type of shapes) {\n            const drawer = this._engine.getShapeDrawer(type);\n            if (drawer) {\n                this.shapeDrawers.set(type, drawer);\n            }\n        }\n        await this.particles.initPlugins();\n        this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        const availablePlugins = await this._engine.getAvailablePlugins(this);\n        for (const [id, plugin] of availablePlugins) {\n            this.plugins.set(id, plugin);\n        }\n        this.retina.init();\n        await this.canvas.init();\n        this.updateActualOptions();\n        this.canvas.initBackground();\n        this.canvas.resize();\n        this.zLayers = this.actualOptions.zLayers;\n        this._duration = getRangeValue(this.actualOptions.duration) * millisecondsToSeconds;\n        this._delay = getRangeValue(this.actualOptions.delay) * millisecondsToSeconds;\n        this._lifeTime = 0;\n        const defaultFpsLimit = 120, minFpsLimit = 0;\n        this.fpsLimit = this.actualOptions.fpsLimit > minFpsLimit ? this.actualOptions.fpsLimit : defaultFpsLimit;\n        this._smooth = this.actualOptions.smooth;\n        for (const [, drawer] of this.effectDrawers) {\n            await drawer.init?.(this);\n        }\n        for (const [, drawer] of this.shapeDrawers) {\n            await drawer.init?.(this);\n        }\n        for (const [, plugin] of this.plugins) {\n            await plugin.init?.();\n        }\n        this._engine.dispatchEvent(\"containerInit\", { container: this });\n        await this.particles.init();\n        this.particles.setDensity();\n        for (const [, plugin] of this.plugins) {\n            plugin.particlesSetup?.();\n        }\n        this._engine.dispatchEvent(\"particlesSetup\", { container: this });\n    }\n    async loadTheme(name) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._currentTheme = name;\n        await this.refresh();\n    }\n    pause() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        if (this._drawAnimationFrame !== undefined) {\n            cancelAnimationFrame(this._drawAnimationFrame);\n            delete this._drawAnimationFrame;\n        }\n        if (this._paused) {\n            return;\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.pause?.();\n        }\n        if (!this.pageHidden) {\n            this._paused = true;\n        }\n        this._engine.dispatchEvent(\"containerPaused\", { container: this });\n    }\n    play(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const needsUpdate = this._paused || force;\n        if (this._firstStart && !this.actualOptions.autoPlay) {\n            this._firstStart = false;\n            return;\n        }\n        if (this._paused) {\n            this._paused = false;\n        }\n        if (needsUpdate) {\n            for (const [, plugin] of this.plugins) {\n                if (plugin.play) {\n                    plugin.play();\n                }\n            }\n        }\n        this._engine.dispatchEvent(\"containerPlay\", { container: this });\n        this.draw(needsUpdate ?? false);\n    }\n    async refresh() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        return this.start();\n    }\n    async reset() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._initialSourceOptions = undefined;\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        return this.refresh();\n    }\n    async start() {\n        if (!guardCheck(this) || this.started) {\n            return;\n        }\n        await this.init();\n        this.started = true;\n        await new Promise((resolve) => {\n            const start = async () => {\n                this._eventListeners.addListeners();\n                if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n                    this._intersectionObserver.observe(this.interactivity.element);\n                }\n                for (const [, plugin] of this.plugins) {\n                    await plugin.start?.();\n                }\n                this._engine.dispatchEvent(\"containerStarted\", { container: this });\n                this.play();\n                resolve();\n            };\n            this._delayTimeout = setTimeout(() => void start(), this._delay);\n        });\n    }\n    stop() {\n        if (!guardCheck(this) || !this.started) {\n            return;\n        }\n        if (this._delayTimeout) {\n            clearTimeout(this._delayTimeout);\n            delete this._delayTimeout;\n        }\n        this._firstStart = true;\n        this.started = false;\n        this._eventListeners.removeListeners();\n        this.pause();\n        this.particles.clear();\n        this.canvas.stop();\n        if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n            this._intersectionObserver.unobserve(this.interactivity.element);\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.stop?.();\n        }\n        for (const key of this.plugins.keys()) {\n            this.plugins.delete(key);\n        }\n        this._sourceOptions = this._options;\n        this._engine.dispatchEvent(\"containerStopped\", { container: this });\n    }\n    updateActualOptions() {\n        this.actualOptions.responsive = [];\n        const newMaxWidth = this.actualOptions.setResponsive(this.canvas.size.width, this.retina.pixelRatio, this._options);\n        this.actualOptions.setTheme(this._currentTheme);\n        if (this._responsiveMaxWidth === newMaxWidth) {\n            return false;\n        }\n        this._responsiveMaxWidth = newMaxWidth;\n        return true;\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}