{"ast":null,"code":"import { Vector } from \"../Core/Utils/Vectors.js\";\nimport { isNumber } from \"./TypeUtils.js\";\nimport { percentDenominator } from \"../Core/Utils/Constants.js\";\nlet _random = Math.random;\nconst easings = new Map(),\n  double = 2,\n  doublePI = Math.PI * double;\nexport function addEasing(name, easing) {\n  if (easings.get(name)) {\n    return;\n  }\n  easings.set(name, easing);\n}\nexport function getEasing(name) {\n  var _easings$get;\n  return (_easings$get = easings.get(name)) !== null && _easings$get !== void 0 ? _easings$get : value => value;\n}\nexport function setRandom() {\n  let rnd = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Math.random;\n  _random = rnd;\n}\nexport function getRandom() {\n  const min = 0,\n    max = 1;\n  return clamp(_random(), min, max - Number.EPSILON);\n}\nexport function clamp(num, min, max) {\n  return Math.min(Math.max(num, min), max);\n}\nexport function mix(comp1, comp2, weight1, weight2) {\n  return Math.floor((comp1 * weight1 + comp2 * weight2) / (weight1 + weight2));\n}\nexport function randomInRange(r) {\n  const max = getRangeMax(r),\n    minOffset = 0;\n  let min = getRangeMin(r);\n  if (max === min) {\n    min = minOffset;\n  }\n  return getRandom() * (max - min) + min;\n}\nexport function getRangeValue(value) {\n  return isNumber(value) ? value : randomInRange(value);\n}\nexport function getRangeMin(value) {\n  return isNumber(value) ? value : value.min;\n}\nexport function getRangeMax(value) {\n  return isNumber(value) ? value : value.max;\n}\nexport function setRangeValue(source, value) {\n  if (source === value || value === undefined && isNumber(source)) {\n    return source;\n  }\n  const min = getRangeMin(source),\n    max = getRangeMax(source);\n  return value !== undefined ? {\n    min: Math.min(min, value),\n    max: Math.max(max, value)\n  } : setRangeValue(min, max);\n}\nexport function getDistances(pointA, pointB) {\n  const dx = pointA.x - pointB.x,\n    dy = pointA.y - pointB.y,\n    squareExp = 2;\n  return {\n    dx: dx,\n    dy: dy,\n    distance: Math.sqrt(dx ** squareExp + dy ** squareExp)\n  };\n}\nexport function getDistance(pointA, pointB) {\n  return getDistances(pointA, pointB).distance;\n}\nexport function degToRad(degrees) {\n  const PIDeg = 180;\n  return degrees * Math.PI / PIDeg;\n}\nexport function getParticleDirectionAngle(direction, position, center) {\n  if (isNumber(direction)) {\n    return degToRad(direction);\n  }\n  const empty = 0,\n    half = 0.5,\n    quarter = 0.25,\n    threeQuarter = half + quarter;\n  switch (direction) {\n    case \"top\":\n      return -Math.PI * half;\n    case \"top-right\":\n      return -Math.PI * quarter;\n    case \"right\":\n      return empty;\n    case \"bottom-right\":\n      return Math.PI * quarter;\n    case \"bottom\":\n      return Math.PI * half;\n    case \"bottom-left\":\n      return Math.PI * threeQuarter;\n    case \"left\":\n      return Math.PI;\n    case \"top-left\":\n      return -Math.PI * threeQuarter;\n    case \"inside\":\n      return Math.atan2(center.y - position.y, center.x - position.x);\n    case \"outside\":\n      return Math.atan2(position.y - center.y, position.x - center.x);\n    default:\n      return getRandom() * doublePI;\n  }\n}\nexport function getParticleBaseVelocity(direction) {\n  const baseVelocity = Vector.origin;\n  baseVelocity.length = 1;\n  baseVelocity.angle = direction;\n  return baseVelocity;\n}\nexport function collisionVelocity(v1, v2, m1, m2) {\n  const double = 2;\n  return Vector.create(v1.x * (m1 - m2) / (m1 + m2) + v2.x * double * m2 / (m1 + m2), v1.y);\n}\nexport function calcPositionFromSize(data) {\n  var _data$position;\n  return ((_data$position = data.position) === null || _data$position === void 0 ? void 0 : _data$position.x) !== undefined && data.position.y !== undefined ? {\n    x: data.position.x * data.size.width / percentDenominator,\n    y: data.position.y * data.size.height / percentDenominator\n  } : undefined;\n}\nexport function calcPositionOrRandomFromSize(data) {\n  var _data$position$x, _data$position2, _data$position$y, _data$position3;\n  return {\n    x: ((_data$position$x = (_data$position2 = data.position) === null || _data$position2 === void 0 ? void 0 : _data$position2.x) !== null && _data$position$x !== void 0 ? _data$position$x : getRandom() * percentDenominator) * data.size.width / percentDenominator,\n    y: ((_data$position$y = (_data$position3 = data.position) === null || _data$position3 === void 0 ? void 0 : _data$position3.y) !== null && _data$position$y !== void 0 ? _data$position$y : getRandom() * percentDenominator) * data.size.height / percentDenominator\n  };\n}\nexport function calcPositionOrRandomFromSizeRanged(data) {\n  var _data$position4, _data$position5;\n  const position = {\n    x: ((_data$position4 = data.position) === null || _data$position4 === void 0 ? void 0 : _data$position4.x) !== undefined ? getRangeValue(data.position.x) : undefined,\n    y: ((_data$position5 = data.position) === null || _data$position5 === void 0 ? void 0 : _data$position5.y) !== undefined ? getRangeValue(data.position.y) : undefined\n  };\n  return calcPositionOrRandomFromSize({\n    size: data.size,\n    position\n  });\n}\nexport function calcExactPositionOrRandomFromSize(data) {\n  var _data$position$x2, _data$position6, _data$position$y2, _data$position7;\n  return {\n    x: (_data$position$x2 = (_data$position6 = data.position) === null || _data$position6 === void 0 ? void 0 : _data$position6.x) !== null && _data$position$x2 !== void 0 ? _data$position$x2 : getRandom() * data.size.width,\n    y: (_data$position$y2 = (_data$position7 = data.position) === null || _data$position7 === void 0 ? void 0 : _data$position7.y) !== null && _data$position$y2 !== void 0 ? _data$position$y2 : getRandom() * data.size.height\n  };\n}\nexport function calcExactPositionOrRandomFromSizeRanged(data) {\n  var _data$position8, _data$position9;\n  const position = {\n    x: ((_data$position8 = data.position) === null || _data$position8 === void 0 ? void 0 : _data$position8.x) !== undefined ? getRangeValue(data.position.x) : undefined,\n    y: ((_data$position9 = data.position) === null || _data$position9 === void 0 ? void 0 : _data$position9.y) !== undefined ? getRangeValue(data.position.y) : undefined\n  };\n  return calcExactPositionOrRandomFromSize({\n    size: data.size,\n    position\n  });\n}\nexport function parseAlpha(input) {\n  const defaultAlpha = 1;\n  if (!input) {\n    return defaultAlpha;\n  }\n  return input.endsWith(\"%\") ? parseFloat(input) / percentDenominator : parseFloat(input);\n}","map":{"version":3,"names":["Vector","isNumber","percentDenominator","_random","Math","random","easings","Map","double","doublePI","PI","addEasing","name","easing","get","set","getEasing","_easings$get","value","setRandom","rnd","arguments","length","undefined","getRandom","min","max","clamp","Number","EPSILON","num","mix","comp1","comp2","weight1","weight2","floor","randomInRange","r","getRangeMax","minOffset","getRangeMin","getRangeValue","setRangeValue","source","getDistances","pointA","pointB","dx","x","dy","y","squareExp","distance","sqrt","getDistance","degToRad","degrees","PIDeg","getParticleDirectionAngle","direction","position","center","empty","half","quarter","threeQuarter","atan2","getParticleBaseVelocity","baseVelocity","origin","angle","collisionVelocity","v1","v2","m1","m2","create","calcPositionFromSize","data","_data$position","size","width","height","calcPositionOrRandomFromSize","_data$position$x","_data$position2","_data$position$y","_data$position3","calcPositionOrRandomFromSizeRanged","_data$position4","_data$position5","calcExactPositionOrRandomFromSize","_data$position$x2","_data$position6","_data$position$y2","_data$position7","calcExactPositionOrRandomFromSizeRanged","_data$position8","_data$position9","parseAlpha","input","defaultAlpha","endsWith","parseFloat"],"sources":["C:/nginx/html/AlbionRoyaleMarket/albion_royale_market_website/node_modules/@tsparticles/engine/browser/Utils/NumberUtils.js"],"sourcesContent":["import { Vector } from \"../Core/Utils/Vectors.js\";\nimport { isNumber } from \"./TypeUtils.js\";\nimport { percentDenominator } from \"../Core/Utils/Constants.js\";\nlet _random = Math.random;\nconst easings = new Map(), double = 2, doublePI = Math.PI * double;\nexport function addEasing(name, easing) {\n    if (easings.get(name)) {\n        return;\n    }\n    easings.set(name, easing);\n}\nexport function getEasing(name) {\n    return easings.get(name) ?? ((value) => value);\n}\nexport function setRandom(rnd = Math.random) {\n    _random = rnd;\n}\nexport function getRandom() {\n    const min = 0, max = 1;\n    return clamp(_random(), min, max - Number.EPSILON);\n}\nexport function clamp(num, min, max) {\n    return Math.min(Math.max(num, min), max);\n}\nexport function mix(comp1, comp2, weight1, weight2) {\n    return Math.floor((comp1 * weight1 + comp2 * weight2) / (weight1 + weight2));\n}\nexport function randomInRange(r) {\n    const max = getRangeMax(r), minOffset = 0;\n    let min = getRangeMin(r);\n    if (max === min) {\n        min = minOffset;\n    }\n    return getRandom() * (max - min) + min;\n}\nexport function getRangeValue(value) {\n    return isNumber(value) ? value : randomInRange(value);\n}\nexport function getRangeMin(value) {\n    return isNumber(value) ? value : value.min;\n}\nexport function getRangeMax(value) {\n    return isNumber(value) ? value : value.max;\n}\nexport function setRangeValue(source, value) {\n    if (source === value || (value === undefined && isNumber(source))) {\n        return source;\n    }\n    const min = getRangeMin(source), max = getRangeMax(source);\n    return value !== undefined\n        ? {\n            min: Math.min(min, value),\n            max: Math.max(max, value),\n        }\n        : setRangeValue(min, max);\n}\nexport function getDistances(pointA, pointB) {\n    const dx = pointA.x - pointB.x, dy = pointA.y - pointB.y, squareExp = 2;\n    return { dx: dx, dy: dy, distance: Math.sqrt(dx ** squareExp + dy ** squareExp) };\n}\nexport function getDistance(pointA, pointB) {\n    return getDistances(pointA, pointB).distance;\n}\nexport function degToRad(degrees) {\n    const PIDeg = 180;\n    return (degrees * Math.PI) / PIDeg;\n}\nexport function getParticleDirectionAngle(direction, position, center) {\n    if (isNumber(direction)) {\n        return degToRad(direction);\n    }\n    const empty = 0, half = 0.5, quarter = 0.25, threeQuarter = half + quarter;\n    switch (direction) {\n        case \"top\":\n            return -Math.PI * half;\n        case \"top-right\":\n            return -Math.PI * quarter;\n        case \"right\":\n            return empty;\n        case \"bottom-right\":\n            return Math.PI * quarter;\n        case \"bottom\":\n            return Math.PI * half;\n        case \"bottom-left\":\n            return Math.PI * threeQuarter;\n        case \"left\":\n            return Math.PI;\n        case \"top-left\":\n            return -Math.PI * threeQuarter;\n        case \"inside\":\n            return Math.atan2(center.y - position.y, center.x - position.x);\n        case \"outside\":\n            return Math.atan2(position.y - center.y, position.x - center.x);\n        default:\n            return getRandom() * doublePI;\n    }\n}\nexport function getParticleBaseVelocity(direction) {\n    const baseVelocity = Vector.origin;\n    baseVelocity.length = 1;\n    baseVelocity.angle = direction;\n    return baseVelocity;\n}\nexport function collisionVelocity(v1, v2, m1, m2) {\n    const double = 2;\n    return Vector.create((v1.x * (m1 - m2)) / (m1 + m2) + (v2.x * double * m2) / (m1 + m2), v1.y);\n}\nexport function calcPositionFromSize(data) {\n    return data.position?.x !== undefined && data.position.y !== undefined\n        ? {\n            x: (data.position.x * data.size.width) / percentDenominator,\n            y: (data.position.y * data.size.height) / percentDenominator,\n        }\n        : undefined;\n}\nexport function calcPositionOrRandomFromSize(data) {\n    return {\n        x: ((data.position?.x ?? getRandom() * percentDenominator) * data.size.width) / percentDenominator,\n        y: ((data.position?.y ?? getRandom() * percentDenominator) * data.size.height) / percentDenominator,\n    };\n}\nexport function calcPositionOrRandomFromSizeRanged(data) {\n    const position = {\n        x: data.position?.x !== undefined ? getRangeValue(data.position.x) : undefined,\n        y: data.position?.y !== undefined ? getRangeValue(data.position.y) : undefined,\n    };\n    return calcPositionOrRandomFromSize({ size: data.size, position });\n}\nexport function calcExactPositionOrRandomFromSize(data) {\n    return {\n        x: data.position?.x ?? getRandom() * data.size.width,\n        y: data.position?.y ?? getRandom() * data.size.height,\n    };\n}\nexport function calcExactPositionOrRandomFromSizeRanged(data) {\n    const position = {\n        x: data.position?.x !== undefined ? getRangeValue(data.position.x) : undefined,\n        y: data.position?.y !== undefined ? getRangeValue(data.position.y) : undefined,\n    };\n    return calcExactPositionOrRandomFromSize({ size: data.size, position });\n}\nexport function parseAlpha(input) {\n    const defaultAlpha = 1;\n    if (!input) {\n        return defaultAlpha;\n    }\n    return input.endsWith(\"%\") ? parseFloat(input) / percentDenominator : parseFloat(input);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}