{"ast":null,"code":"import { clamp, getRandom, getRangeMax, getRangeMin, getRangeValue, mix, randomInRange, setRangeValue } from \"./NumberUtils.js\";\nimport { isArray, isString } from \"./TypeUtils.js\";\nimport { millisecondsToSeconds, percentDenominator } from \"../Core/Utils/Constants.js\";\nimport { itemFromArray } from \"./Utils.js\";\nconst randomColorValue = \"random\",\n  midColorValue = \"mid\",\n  colorManagers = new Map();\nexport function addColorManager(manager) {\n  colorManagers.set(manager.key, manager);\n}\nfunction stringToRgba(input) {\n  for (const [, manager] of colorManagers) {\n    if (input.startsWith(manager.stringPrefix)) {\n      return manager.parseString(input);\n    }\n  }\n  const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])([a-f\\d])?$/i,\n    hexFixed = input.replace(shorthandRegex, (_, r, g, b, a) => {\n      return r + r + g + g + b + b + (a !== undefined ? a + a : \"\");\n    }),\n    regex = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})?$/i,\n    result = regex.exec(hexFixed),\n    radix = 16,\n    defaultAlpha = 1,\n    alphaFactor = 0xff;\n  return result ? {\n    a: result[4] !== undefined ? parseInt(result[4], radix) / alphaFactor : defaultAlpha,\n    b: parseInt(result[3], radix),\n    g: parseInt(result[2], radix),\n    r: parseInt(result[1], radix)\n  } : undefined;\n}\nexport function rangeColorToRgb(input, index) {\n  let useIndex = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  if (!input) {\n    return;\n  }\n  const color = isString(input) ? {\n    value: input\n  } : input;\n  if (isString(color.value)) {\n    return colorToRgb(color.value, index, useIndex);\n  }\n  if (isArray(color.value)) {\n    return rangeColorToRgb({\n      value: itemFromArray(color.value, index, useIndex)\n    });\n  }\n  for (const [, manager] of colorManagers) {\n    const res = manager.handleRangeColor(color);\n    if (res) {\n      return res;\n    }\n  }\n}\nexport function colorToRgb(input, index) {\n  let useIndex = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  if (!input) {\n    return;\n  }\n  const color = isString(input) ? {\n    value: input\n  } : input;\n  if (isString(color.value)) {\n    return color.value === randomColorValue ? getRandomRgbColor() : stringToRgb(color.value);\n  }\n  if (isArray(color.value)) {\n    return colorToRgb({\n      value: itemFromArray(color.value, index, useIndex)\n    });\n  }\n  for (const [, manager] of colorManagers) {\n    const res = manager.handleColor(color);\n    if (res) {\n      return res;\n    }\n  }\n}\nexport function colorToHsl(color, index) {\n  let useIndex = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  const rgb = colorToRgb(color, index, useIndex);\n  return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rangeColorToHsl(color, index) {\n  let useIndex = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  const rgb = rangeColorToRgb(color, index, useIndex);\n  return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rgbToHsl(color) {\n  const rgbMax = 255,\n    hMax = 360,\n    sMax = 100,\n    lMax = 100,\n    hMin = 0,\n    sMin = 0,\n    hPhase = 60,\n    half = 0.5,\n    double = 2,\n    r1 = color.r / rgbMax,\n    g1 = color.g / rgbMax,\n    b1 = color.b / rgbMax,\n    max = Math.max(r1, g1, b1),\n    min = Math.min(r1, g1, b1),\n    res = {\n      h: hMin,\n      l: (max + min) * half,\n      s: sMin\n    };\n  if (max !== min) {\n    res.s = res.l < half ? (max - min) / (max + min) : (max - min) / (double - max - min);\n    res.h = r1 === max ? (g1 - b1) / (max - min) : res.h = g1 === max ? double + (b1 - r1) / (max - min) : double * double + (r1 - g1) / (max - min);\n  }\n  res.l *= lMax;\n  res.s *= sMax;\n  res.h *= hPhase;\n  if (res.h < hMin) {\n    res.h += hMax;\n  }\n  if (res.h >= hMax) {\n    res.h -= hMax;\n  }\n  return res;\n}\nexport function stringToAlpha(input) {\n  var _stringToRgba;\n  return (_stringToRgba = stringToRgba(input)) === null || _stringToRgba === void 0 ? void 0 : _stringToRgba.a;\n}\nexport function stringToRgb(input) {\n  return stringToRgba(input);\n}\nexport function hslToRgb(hsl) {\n  const hMax = 360,\n    sMax = 100,\n    lMax = 100,\n    sMin = 0,\n    lMin = 0,\n    h = (hsl.h % hMax + hMax) % hMax,\n    s = Math.max(sMin, Math.min(sMax, hsl.s)),\n    l = Math.max(lMin, Math.min(lMax, hsl.l)),\n    hNormalized = h / hMax,\n    sNormalized = s / sMax,\n    lNormalized = l / lMax,\n    rgbFactor = 255,\n    triple = 3;\n  if (s === sMin) {\n    const grayscaleValue = Math.round(lNormalized * rgbFactor);\n    return {\n      r: grayscaleValue,\n      g: grayscaleValue,\n      b: grayscaleValue\n    };\n  }\n  const half = 0.5,\n    double = 2,\n    channel = (temp1, temp2, temp3) => {\n      const temp3Min = 0,\n        temp3Max = 1,\n        sextuple = 6;\n      if (temp3 < temp3Min) {\n        temp3++;\n      }\n      if (temp3 > temp3Max) {\n        temp3--;\n      }\n      if (temp3 * sextuple < temp3Max) {\n        return temp1 + (temp2 - temp1) * sextuple * temp3;\n      }\n      if (temp3 * double < temp3Max) {\n        return temp2;\n      }\n      if (temp3 * triple < temp3Max * double) {\n        const temp3Offset = double / triple;\n        return temp1 + (temp2 - temp1) * (temp3Offset - temp3) * sextuple;\n      }\n      return temp1;\n    },\n    sNormalizedOffset = 1,\n    temp1 = lNormalized < half ? lNormalized * (sNormalizedOffset + sNormalized) : lNormalized + sNormalized - lNormalized * sNormalized,\n    temp2 = double * lNormalized - temp1,\n    phaseNumerator = 1,\n    phaseThird = phaseNumerator / triple,\n    red = Math.min(rgbFactor, rgbFactor * channel(temp2, temp1, hNormalized + phaseThird)),\n    green = Math.min(rgbFactor, rgbFactor * channel(temp2, temp1, hNormalized)),\n    blue = Math.min(rgbFactor, rgbFactor * channel(temp2, temp1, hNormalized - phaseThird));\n  return {\n    r: Math.round(red),\n    g: Math.round(green),\n    b: Math.round(blue)\n  };\n}\nexport function hslaToRgba(hsla) {\n  const rgbResult = hslToRgb(hsla);\n  return {\n    a: hsla.a,\n    b: rgbResult.b,\n    g: rgbResult.g,\n    r: rgbResult.r\n  };\n}\nexport function getRandomRgbColor(min) {\n  const defaultMin = 0,\n    fixedMin = min !== null && min !== void 0 ? min : defaultMin,\n    rgbMax = 256;\n  return {\n    b: Math.floor(randomInRange(setRangeValue(fixedMin, rgbMax))),\n    g: Math.floor(randomInRange(setRangeValue(fixedMin, rgbMax))),\n    r: Math.floor(randomInRange(setRangeValue(fixedMin, rgbMax)))\n  };\n}\nexport function getStyleFromRgb(color, opacity) {\n  const defaultOpacity = 1;\n  return \"rgba(\".concat(color.r, \", \").concat(color.g, \", \").concat(color.b, \", \").concat(opacity !== null && opacity !== void 0 ? opacity : defaultOpacity, \")\");\n}\nexport function getStyleFromHsl(color, opacity) {\n  const defaultOpacity = 1;\n  return \"hsla(\".concat(color.h, \", \").concat(color.s, \"%, \").concat(color.l, \"%, \").concat(opacity !== null && opacity !== void 0 ? opacity : defaultOpacity, \")\");\n}\nexport function colorMix(color1, color2, size1, size2) {\n  let rgb1 = color1,\n    rgb2 = color2;\n  if (rgb1.r === undefined) {\n    rgb1 = hslToRgb(color1);\n  }\n  if (rgb2.r === undefined) {\n    rgb2 = hslToRgb(color2);\n  }\n  return {\n    b: mix(rgb1.b, rgb2.b, size1, size2),\n    g: mix(rgb1.g, rgb2.g, size1, size2),\n    r: mix(rgb1.r, rgb2.r, size1, size2)\n  };\n}\nexport function getLinkColor(p1, p2, linkColor) {\n  if (linkColor === randomColorValue) {\n    return getRandomRgbColor();\n  } else if (linkColor === midColorValue) {\n    var _p1$getFillColor, _p2$getFillColor;\n    const sourceColor = (_p1$getFillColor = p1.getFillColor()) !== null && _p1$getFillColor !== void 0 ? _p1$getFillColor : p1.getStrokeColor(),\n      destColor = (_p2$getFillColor = p2 === null || p2 === void 0 ? void 0 : p2.getFillColor()) !== null && _p2$getFillColor !== void 0 ? _p2$getFillColor : p2 === null || p2 === void 0 ? void 0 : p2.getStrokeColor();\n    if (sourceColor && destColor && p2) {\n      return colorMix(sourceColor, destColor, p1.getRadius(), p2.getRadius());\n    } else {\n      const hslColor = sourceColor !== null && sourceColor !== void 0 ? sourceColor : destColor;\n      if (hslColor) {\n        return hslToRgb(hslColor);\n      }\n    }\n  } else {\n    return linkColor;\n  }\n}\nexport function getLinkRandomColor(optColor, blink, consent) {\n  const color = isString(optColor) ? optColor : optColor.value;\n  if (color === randomColorValue) {\n    if (consent) {\n      return rangeColorToRgb({\n        value: color\n      });\n    }\n    if (blink) {\n      return randomColorValue;\n    }\n    return midColorValue;\n  } else if (color === midColorValue) {\n    return midColorValue;\n  } else {\n    return rangeColorToRgb({\n      value: color\n    });\n  }\n}\nexport function getHslFromAnimation(animation) {\n  return animation !== undefined ? {\n    h: animation.h.value,\n    s: animation.s.value,\n    l: animation.l.value\n  } : undefined;\n}\nexport function getHslAnimationFromHsl(hsl, animationOptions, reduceFactor) {\n  const resColor = {\n    h: {\n      enable: false,\n      value: hsl.h\n    },\n    s: {\n      enable: false,\n      value: hsl.s\n    },\n    l: {\n      enable: false,\n      value: hsl.l\n    }\n  };\n  if (animationOptions) {\n    setColorAnimation(resColor.h, animationOptions.h, reduceFactor);\n    setColorAnimation(resColor.s, animationOptions.s, reduceFactor);\n    setColorAnimation(resColor.l, animationOptions.l, reduceFactor);\n  }\n  return resColor;\n}\nfunction setColorAnimation(colorValue, colorAnimation, reduceFactor) {\n  colorValue.enable = colorAnimation.enable;\n  const defaultVelocity = 0,\n    decayOffset = 1,\n    defaultLoops = 0,\n    defaultTime = 0;\n  if (colorValue.enable) {\n    colorValue.velocity = getRangeValue(colorAnimation.speed) / percentDenominator * reduceFactor;\n    colorValue.decay = decayOffset - getRangeValue(colorAnimation.decay);\n    colorValue.status = \"increasing\";\n    colorValue.loops = defaultLoops;\n    colorValue.maxLoops = getRangeValue(colorAnimation.count);\n    colorValue.time = defaultTime;\n    colorValue.delayTime = getRangeValue(colorAnimation.delay) * millisecondsToSeconds;\n    if (!colorAnimation.sync) {\n      colorValue.velocity *= getRandom();\n      colorValue.value *= getRandom();\n    }\n    colorValue.initialValue = colorValue.value;\n    colorValue.offset = setRangeValue(colorAnimation.offset);\n  } else {\n    colorValue.velocity = defaultVelocity;\n  }\n}\nexport function updateColorValue(data, range, decrease, delta) {\n  var _data$maxLoops, _data$loops, _data$maxLoops2, _data$delayTime, _data$delayTime2, _data$delayTime3, _data$delayTime4, _data$velocity, _data$decay;\n  const minLoops = 0,\n    minDelay = 0,\n    identity = 1,\n    minVelocity = 0,\n    minOffset = 0,\n    velocityFactor = 3.6;\n  if (!data || !data.enable || ((_data$maxLoops = data.maxLoops) !== null && _data$maxLoops !== void 0 ? _data$maxLoops : minLoops) > minLoops && ((_data$loops = data.loops) !== null && _data$loops !== void 0 ? _data$loops : minLoops) > ((_data$maxLoops2 = data.maxLoops) !== null && _data$maxLoops2 !== void 0 ? _data$maxLoops2 : minLoops)) {\n    return;\n  }\n  if (!data.time) {\n    data.time = 0;\n  }\n  if (((_data$delayTime = data.delayTime) !== null && _data$delayTime !== void 0 ? _data$delayTime : minDelay) > minDelay && data.time < ((_data$delayTime2 = data.delayTime) !== null && _data$delayTime2 !== void 0 ? _data$delayTime2 : minDelay)) {\n    data.time += delta.value;\n  }\n  if (((_data$delayTime3 = data.delayTime) !== null && _data$delayTime3 !== void 0 ? _data$delayTime3 : minDelay) > minDelay && data.time < ((_data$delayTime4 = data.delayTime) !== null && _data$delayTime4 !== void 0 ? _data$delayTime4 : minDelay)) {\n    return;\n  }\n  const offset = data.offset ? randomInRange(data.offset) : minOffset,\n    velocity = ((_data$velocity = data.velocity) !== null && _data$velocity !== void 0 ? _data$velocity : minVelocity) * delta.factor + offset * velocityFactor,\n    decay = (_data$decay = data.decay) !== null && _data$decay !== void 0 ? _data$decay : identity,\n    max = getRangeMax(range),\n    min = getRangeMin(range);\n  if (!decrease || data.status === \"increasing\") {\n    data.value += velocity;\n    if (data.value > max) {\n      if (!data.loops) {\n        data.loops = 0;\n      }\n      data.loops++;\n      if (decrease) {\n        data.status = \"decreasing\";\n      } else {\n        data.value -= max;\n      }\n    }\n  } else {\n    data.value -= velocity;\n    const minValue = 0;\n    if (data.value < minValue) {\n      if (!data.loops) {\n        data.loops = 0;\n      }\n      data.loops++;\n      data.status = \"increasing\";\n    }\n  }\n  if (data.velocity && decay !== identity) {\n    data.velocity *= decay;\n  }\n  data.value = clamp(data.value, min, max);\n}\nexport function updateColor(color, delta) {\n  if (!color) {\n    return;\n  }\n  const {\n    h,\n    s,\n    l\n  } = color;\n  const ranges = {\n    h: {\n      min: 0,\n      max: 360\n    },\n    s: {\n      min: 0,\n      max: 100\n    },\n    l: {\n      min: 0,\n      max: 100\n    }\n  };\n  if (h) {\n    updateColorValue(h, ranges.h, false, delta);\n  }\n  if (s) {\n    updateColorValue(s, ranges.s, true, delta);\n  }\n  if (l) {\n    updateColorValue(l, ranges.l, true, delta);\n  }\n}","map":{"version":3,"names":["clamp","getRandom","getRangeMax","getRangeMin","getRangeValue","mix","randomInRange","setRangeValue","isArray","isString","millisecondsToSeconds","percentDenominator","itemFromArray","randomColorValue","midColorValue","colorManagers","Map","addColorManager","manager","set","key","stringToRgba","input","startsWith","stringPrefix","parseString","shorthandRegex","hexFixed","replace","_","r","g","b","a","undefined","regex","result","exec","radix","defaultAlpha","alphaFactor","parseInt","rangeColorToRgb","index","useIndex","arguments","length","color","value","colorToRgb","res","handleRangeColor","getRandomRgbColor","stringToRgb","handleColor","colorToHsl","rgb","rgbToHsl","rangeColorToHsl","rgbMax","hMax","sMax","lMax","hMin","sMin","hPhase","half","double","r1","g1","b1","max","Math","min","h","l","s","stringToAlpha","_stringToRgba","hslToRgb","hsl","lMin","hNormalized","sNormalized","lNormalized","rgbFactor","triple","grayscaleValue","round","channel","temp1","temp2","temp3","temp3Min","temp3Max","sextuple","temp3Offset","sNormalizedOffset","phaseNumerator","phaseThird","red","green","blue","hslaToRgba","hsla","rgbResult","defaultMin","fixedMin","floor","getStyleFromRgb","opacity","defaultOpacity","concat","getStyleFromHsl","colorMix","color1","color2","size1","size2","rgb1","rgb2","getLinkColor","p1","p2","linkColor","_p1$getFillColor","_p2$getFillColor","sourceColor","getFillColor","getStrokeColor","destColor","getRadius","hslColor","getLinkRandomColor","optColor","blink","consent","getHslFromAnimation","animation","getHslAnimationFromHsl","animationOptions","reduceFactor","resColor","enable","setColorAnimation","colorValue","colorAnimation","defaultVelocity","decayOffset","defaultLoops","defaultTime","velocity","speed","decay","status","loops","maxLoops","count","time","delayTime","delay","sync","initialValue","offset","updateColorValue","data","range","decrease","delta","_data$maxLoops","_data$loops","_data$maxLoops2","_data$delayTime","_data$delayTime2","_data$delayTime3","_data$delayTime4","_data$velocity","_data$decay","minLoops","minDelay","identity","minVelocity","minOffset","velocityFactor","factor","minValue","updateColor","ranges"],"sources":["C:/nginx/html/AlbionRoyaleMarket/albion_royale_market_website/node_modules/@tsparticles/engine/browser/Utils/ColorUtils.js"],"sourcesContent":["import { clamp, getRandom, getRangeMax, getRangeMin, getRangeValue, mix, randomInRange, setRangeValue, } from \"./NumberUtils.js\";\nimport { isArray, isString } from \"./TypeUtils.js\";\nimport { millisecondsToSeconds, percentDenominator } from \"../Core/Utils/Constants.js\";\nimport { itemFromArray } from \"./Utils.js\";\nconst randomColorValue = \"random\", midColorValue = \"mid\", colorManagers = new Map();\nexport function addColorManager(manager) {\n    colorManagers.set(manager.key, manager);\n}\nfunction stringToRgba(input) {\n    for (const [, manager] of colorManagers) {\n        if (input.startsWith(manager.stringPrefix)) {\n            return manager.parseString(input);\n        }\n    }\n    const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])([a-f\\d])?$/i, hexFixed = input.replace(shorthandRegex, (_, r, g, b, a) => {\n        return r + r + g + g + b + b + (a !== undefined ? a + a : \"\");\n    }), regex = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})?$/i, result = regex.exec(hexFixed), radix = 16, defaultAlpha = 1, alphaFactor = 0xff;\n    return result\n        ? {\n            a: result[4] !== undefined\n                ? parseInt(result[4], radix) / alphaFactor\n                : defaultAlpha,\n            b: parseInt(result[3], radix),\n            g: parseInt(result[2], radix),\n            r: parseInt(result[1], radix),\n        }\n        : undefined;\n}\nexport function rangeColorToRgb(input, index, useIndex = true) {\n    if (!input) {\n        return;\n    }\n    const color = isString(input) ? { value: input } : input;\n    if (isString(color.value)) {\n        return colorToRgb(color.value, index, useIndex);\n    }\n    if (isArray(color.value)) {\n        return rangeColorToRgb({\n            value: itemFromArray(color.value, index, useIndex),\n        });\n    }\n    for (const [, manager] of colorManagers) {\n        const res = manager.handleRangeColor(color);\n        if (res) {\n            return res;\n        }\n    }\n}\nexport function colorToRgb(input, index, useIndex = true) {\n    if (!input) {\n        return;\n    }\n    const color = isString(input) ? { value: input } : input;\n    if (isString(color.value)) {\n        return color.value === randomColorValue ? getRandomRgbColor() : stringToRgb(color.value);\n    }\n    if (isArray(color.value)) {\n        return colorToRgb({\n            value: itemFromArray(color.value, index, useIndex),\n        });\n    }\n    for (const [, manager] of colorManagers) {\n        const res = manager.handleColor(color);\n        if (res) {\n            return res;\n        }\n    }\n}\nexport function colorToHsl(color, index, useIndex = true) {\n    const rgb = colorToRgb(color, index, useIndex);\n    return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rangeColorToHsl(color, index, useIndex = true) {\n    const rgb = rangeColorToRgb(color, index, useIndex);\n    return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rgbToHsl(color) {\n    const rgbMax = 255, hMax = 360, sMax = 100, lMax = 100, hMin = 0, sMin = 0, hPhase = 60, half = 0.5, double = 2, r1 = color.r / rgbMax, g1 = color.g / rgbMax, b1 = color.b / rgbMax, max = Math.max(r1, g1, b1), min = Math.min(r1, g1, b1), res = {\n        h: hMin,\n        l: (max + min) * half,\n        s: sMin,\n    };\n    if (max !== min) {\n        res.s = res.l < half ? (max - min) / (max + min) : (max - min) / (double - max - min);\n        res.h =\n            r1 === max\n                ? (g1 - b1) / (max - min)\n                : (res.h = g1 === max ? double + (b1 - r1) / (max - min) : double * double + (r1 - g1) / (max - min));\n    }\n    res.l *= lMax;\n    res.s *= sMax;\n    res.h *= hPhase;\n    if (res.h < hMin) {\n        res.h += hMax;\n    }\n    if (res.h >= hMax) {\n        res.h -= hMax;\n    }\n    return res;\n}\nexport function stringToAlpha(input) {\n    return stringToRgba(input)?.a;\n}\nexport function stringToRgb(input) {\n    return stringToRgba(input);\n}\nexport function hslToRgb(hsl) {\n    const hMax = 360, sMax = 100, lMax = 100, sMin = 0, lMin = 0, h = ((hsl.h % hMax) + hMax) % hMax, s = Math.max(sMin, Math.min(sMax, hsl.s)), l = Math.max(lMin, Math.min(lMax, hsl.l)), hNormalized = h / hMax, sNormalized = s / sMax, lNormalized = l / lMax, rgbFactor = 255, triple = 3;\n    if (s === sMin) {\n        const grayscaleValue = Math.round(lNormalized * rgbFactor);\n        return { r: grayscaleValue, g: grayscaleValue, b: grayscaleValue };\n    }\n    const half = 0.5, double = 2, channel = (temp1, temp2, temp3) => {\n        const temp3Min = 0, temp3Max = 1, sextuple = 6;\n        if (temp3 < temp3Min) {\n            temp3++;\n        }\n        if (temp3 > temp3Max) {\n            temp3--;\n        }\n        if (temp3 * sextuple < temp3Max) {\n            return temp1 + (temp2 - temp1) * sextuple * temp3;\n        }\n        if (temp3 * double < temp3Max) {\n            return temp2;\n        }\n        if (temp3 * triple < temp3Max * double) {\n            const temp3Offset = double / triple;\n            return temp1 + (temp2 - temp1) * (temp3Offset - temp3) * sextuple;\n        }\n        return temp1;\n    }, sNormalizedOffset = 1, temp1 = lNormalized < half\n        ? lNormalized * (sNormalizedOffset + sNormalized)\n        : lNormalized + sNormalized - lNormalized * sNormalized, temp2 = double * lNormalized - temp1, phaseNumerator = 1, phaseThird = phaseNumerator / triple, red = Math.min(rgbFactor, rgbFactor * channel(temp2, temp1, hNormalized + phaseThird)), green = Math.min(rgbFactor, rgbFactor * channel(temp2, temp1, hNormalized)), blue = Math.min(rgbFactor, rgbFactor * channel(temp2, temp1, hNormalized - phaseThird));\n    return { r: Math.round(red), g: Math.round(green), b: Math.round(blue) };\n}\nexport function hslaToRgba(hsla) {\n    const rgbResult = hslToRgb(hsla);\n    return {\n        a: hsla.a,\n        b: rgbResult.b,\n        g: rgbResult.g,\n        r: rgbResult.r,\n    };\n}\nexport function getRandomRgbColor(min) {\n    const defaultMin = 0, fixedMin = min ?? defaultMin, rgbMax = 256;\n    return {\n        b: Math.floor(randomInRange(setRangeValue(fixedMin, rgbMax))),\n        g: Math.floor(randomInRange(setRangeValue(fixedMin, rgbMax))),\n        r: Math.floor(randomInRange(setRangeValue(fixedMin, rgbMax))),\n    };\n}\nexport function getStyleFromRgb(color, opacity) {\n    const defaultOpacity = 1;\n    return `rgba(${color.r}, ${color.g}, ${color.b}, ${opacity ?? defaultOpacity})`;\n}\nexport function getStyleFromHsl(color, opacity) {\n    const defaultOpacity = 1;\n    return `hsla(${color.h}, ${color.s}%, ${color.l}%, ${opacity ?? defaultOpacity})`;\n}\nexport function colorMix(color1, color2, size1, size2) {\n    let rgb1 = color1, rgb2 = color2;\n    if (rgb1.r === undefined) {\n        rgb1 = hslToRgb(color1);\n    }\n    if (rgb2.r === undefined) {\n        rgb2 = hslToRgb(color2);\n    }\n    return {\n        b: mix(rgb1.b, rgb2.b, size1, size2),\n        g: mix(rgb1.g, rgb2.g, size1, size2),\n        r: mix(rgb1.r, rgb2.r, size1, size2),\n    };\n}\nexport function getLinkColor(p1, p2, linkColor) {\n    if (linkColor === randomColorValue) {\n        return getRandomRgbColor();\n    }\n    else if (linkColor === midColorValue) {\n        const sourceColor = p1.getFillColor() ?? p1.getStrokeColor(), destColor = p2?.getFillColor() ?? p2?.getStrokeColor();\n        if (sourceColor && destColor && p2) {\n            return colorMix(sourceColor, destColor, p1.getRadius(), p2.getRadius());\n        }\n        else {\n            const hslColor = sourceColor ?? destColor;\n            if (hslColor) {\n                return hslToRgb(hslColor);\n            }\n        }\n    }\n    else {\n        return linkColor;\n    }\n}\nexport function getLinkRandomColor(optColor, blink, consent) {\n    const color = isString(optColor) ? optColor : optColor.value;\n    if (color === randomColorValue) {\n        if (consent) {\n            return rangeColorToRgb({\n                value: color,\n            });\n        }\n        if (blink) {\n            return randomColorValue;\n        }\n        return midColorValue;\n    }\n    else if (color === midColorValue) {\n        return midColorValue;\n    }\n    else {\n        return rangeColorToRgb({\n            value: color,\n        });\n    }\n}\nexport function getHslFromAnimation(animation) {\n    return animation !== undefined\n        ? {\n            h: animation.h.value,\n            s: animation.s.value,\n            l: animation.l.value,\n        }\n        : undefined;\n}\nexport function getHslAnimationFromHsl(hsl, animationOptions, reduceFactor) {\n    const resColor = {\n        h: {\n            enable: false,\n            value: hsl.h,\n        },\n        s: {\n            enable: false,\n            value: hsl.s,\n        },\n        l: {\n            enable: false,\n            value: hsl.l,\n        },\n    };\n    if (animationOptions) {\n        setColorAnimation(resColor.h, animationOptions.h, reduceFactor);\n        setColorAnimation(resColor.s, animationOptions.s, reduceFactor);\n        setColorAnimation(resColor.l, animationOptions.l, reduceFactor);\n    }\n    return resColor;\n}\nfunction setColorAnimation(colorValue, colorAnimation, reduceFactor) {\n    colorValue.enable = colorAnimation.enable;\n    const defaultVelocity = 0, decayOffset = 1, defaultLoops = 0, defaultTime = 0;\n    if (colorValue.enable) {\n        colorValue.velocity = (getRangeValue(colorAnimation.speed) / percentDenominator) * reduceFactor;\n        colorValue.decay = decayOffset - getRangeValue(colorAnimation.decay);\n        colorValue.status = \"increasing\";\n        colorValue.loops = defaultLoops;\n        colorValue.maxLoops = getRangeValue(colorAnimation.count);\n        colorValue.time = defaultTime;\n        colorValue.delayTime = getRangeValue(colorAnimation.delay) * millisecondsToSeconds;\n        if (!colorAnimation.sync) {\n            colorValue.velocity *= getRandom();\n            colorValue.value *= getRandom();\n        }\n        colorValue.initialValue = colorValue.value;\n        colorValue.offset = setRangeValue(colorAnimation.offset);\n    }\n    else {\n        colorValue.velocity = defaultVelocity;\n    }\n}\nexport function updateColorValue(data, range, decrease, delta) {\n    const minLoops = 0, minDelay = 0, identity = 1, minVelocity = 0, minOffset = 0, velocityFactor = 3.6;\n    if (!data ||\n        !data.enable ||\n        ((data.maxLoops ?? minLoops) > minLoops && (data.loops ?? minLoops) > (data.maxLoops ?? minLoops))) {\n        return;\n    }\n    if (!data.time) {\n        data.time = 0;\n    }\n    if ((data.delayTime ?? minDelay) > minDelay && data.time < (data.delayTime ?? minDelay)) {\n        data.time += delta.value;\n    }\n    if ((data.delayTime ?? minDelay) > minDelay && data.time < (data.delayTime ?? minDelay)) {\n        return;\n    }\n    const offset = data.offset ? randomInRange(data.offset) : minOffset, velocity = (data.velocity ?? minVelocity) * delta.factor + offset * velocityFactor, decay = data.decay ?? identity, max = getRangeMax(range), min = getRangeMin(range);\n    if (!decrease || data.status === \"increasing\") {\n        data.value += velocity;\n        if (data.value > max) {\n            if (!data.loops) {\n                data.loops = 0;\n            }\n            data.loops++;\n            if (decrease) {\n                data.status = \"decreasing\";\n            }\n            else {\n                data.value -= max;\n            }\n        }\n    }\n    else {\n        data.value -= velocity;\n        const minValue = 0;\n        if (data.value < minValue) {\n            if (!data.loops) {\n                data.loops = 0;\n            }\n            data.loops++;\n            data.status = \"increasing\";\n        }\n    }\n    if (data.velocity && decay !== identity) {\n        data.velocity *= decay;\n    }\n    data.value = clamp(data.value, min, max);\n}\nexport function updateColor(color, delta) {\n    if (!color) {\n        return;\n    }\n    const { h, s, l } = color;\n    const ranges = {\n        h: { min: 0, max: 360 },\n        s: { min: 0, max: 100 },\n        l: { min: 0, max: 100 },\n    };\n    if (h) {\n        updateColorValue(h, ranges.h, false, delta);\n    }\n    if (s) {\n        updateColorValue(s, ranges.s, true, delta);\n    }\n    if (l) {\n        updateColorValue(l, ranges.l, true, delta);\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}