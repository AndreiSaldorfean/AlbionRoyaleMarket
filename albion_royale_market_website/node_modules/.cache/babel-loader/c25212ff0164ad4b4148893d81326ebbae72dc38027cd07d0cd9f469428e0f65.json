{"ast":null,"code":"import { getRangeMax, getRangeValue } from \"@tsparticles/engine\";\nimport { applyDistance, getProximitySpeedFactor, initSpin, move, spin } from \"./Utils.js\";\nconst diffFactor = 2,\n  defaultSizeFactor = 1,\n  defaultDeltaFactor = 1;\nexport class BaseMover {\n  init(particle) {\n    const options = particle.options,\n      gravityOptions = options.move.gravity;\n    particle.gravity = {\n      enable: gravityOptions.enable,\n      acceleration: getRangeValue(gravityOptions.acceleration),\n      inverse: gravityOptions.inverse\n    };\n    initSpin(particle);\n  }\n  isEnabled(particle) {\n    return !particle.destroyed && particle.options.move.enable;\n  }\n  move(particle, delta) {\n    var _particle$retina, _particle$retina$move, _particle$retina2, _particle$retina2$mov, _particle$retina$maxS;\n    const particleOptions = particle.options,\n      moveOptions = particleOptions.move;\n    if (!moveOptions.enable) {\n      return;\n    }\n    const container = particle.container,\n      pxRatio = container.retina.pixelRatio;\n    (_particle$retina$move = (_particle$retina = particle.retina).moveSpeed) !== null && _particle$retina$move !== void 0 ? _particle$retina$move : _particle$retina.moveSpeed = getRangeValue(moveOptions.speed) * pxRatio;\n    (_particle$retina2$mov = (_particle$retina2 = particle.retina).moveDrift) !== null && _particle$retina2$mov !== void 0 ? _particle$retina2$mov : _particle$retina2.moveDrift = getRangeValue(particle.options.move.drift) * pxRatio;\n    const slowFactor = getProximitySpeedFactor(particle),\n      baseSpeed = particle.retina.moveSpeed * container.retina.reduceFactor,\n      moveDrift = particle.retina.moveDrift,\n      maxSize = getRangeMax(particleOptions.size.value) * pxRatio,\n      sizeFactor = moveOptions.size ? particle.getRadius() / maxSize : defaultSizeFactor,\n      deltaFactor = delta.factor || defaultDeltaFactor,\n      moveSpeed = baseSpeed * sizeFactor * slowFactor * deltaFactor / diffFactor,\n      maxSpeed = (_particle$retina$maxS = particle.retina.maxSpeed) !== null && _particle$retina$maxS !== void 0 ? _particle$retina$maxS : container.retina.maxSpeed;\n    if (moveOptions.spin.enable) {\n      spin(particle, moveSpeed);\n    } else {\n      move(particle, moveOptions, moveSpeed, maxSpeed, moveDrift, delta);\n    }\n    applyDistance(particle);\n  }\n}","map":{"version":3,"names":["getRangeMax","getRangeValue","applyDistance","getProximitySpeedFactor","initSpin","move","spin","diffFactor","defaultSizeFactor","defaultDeltaFactor","BaseMover","init","particle","options","gravityOptions","gravity","enable","acceleration","inverse","isEnabled","destroyed","delta","_particle$retina","_particle$retina$move","_particle$retina2","_particle$retina2$mov","_particle$retina$maxS","particleOptions","moveOptions","container","pxRatio","retina","pixelRatio","moveSpeed","speed","moveDrift","drift","slowFactor","baseSpeed","reduceFactor","maxSize","size","value","sizeFactor","getRadius","deltaFactor","factor","maxSpeed"],"sources":["C:/nginx/html/AlbionRoyaleMarket/albion_royale_market_website/node_modules/@tsparticles/move-base/browser/BaseMover.js"],"sourcesContent":["import { getRangeMax, getRangeValue } from \"@tsparticles/engine\";\nimport { applyDistance, getProximitySpeedFactor, initSpin, move, spin } from \"./Utils.js\";\nconst diffFactor = 2, defaultSizeFactor = 1, defaultDeltaFactor = 1;\nexport class BaseMover {\n    init(particle) {\n        const options = particle.options, gravityOptions = options.move.gravity;\n        particle.gravity = {\n            enable: gravityOptions.enable,\n            acceleration: getRangeValue(gravityOptions.acceleration),\n            inverse: gravityOptions.inverse,\n        };\n        initSpin(particle);\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && particle.options.move.enable;\n    }\n    move(particle, delta) {\n        const particleOptions = particle.options, moveOptions = particleOptions.move;\n        if (!moveOptions.enable) {\n            return;\n        }\n        const container = particle.container, pxRatio = container.retina.pixelRatio;\n        particle.retina.moveSpeed ??= getRangeValue(moveOptions.speed) * pxRatio;\n        particle.retina.moveDrift ??= getRangeValue(particle.options.move.drift) * pxRatio;\n        const slowFactor = getProximitySpeedFactor(particle), baseSpeed = particle.retina.moveSpeed * container.retina.reduceFactor, moveDrift = particle.retina.moveDrift, maxSize = getRangeMax(particleOptions.size.value) * pxRatio, sizeFactor = moveOptions.size ? particle.getRadius() / maxSize : defaultSizeFactor, deltaFactor = delta.factor || defaultDeltaFactor, moveSpeed = (baseSpeed * sizeFactor * slowFactor * deltaFactor) / diffFactor, maxSpeed = particle.retina.maxSpeed ?? container.retina.maxSpeed;\n        if (moveOptions.spin.enable) {\n            spin(particle, moveSpeed);\n        }\n        else {\n            move(particle, moveOptions, moveSpeed, maxSpeed, moveDrift, delta);\n        }\n        applyDistance(particle);\n    }\n}\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,aAAa,QAAQ,qBAAqB;AAChE,SAASC,aAAa,EAAEC,uBAAuB,EAAEC,QAAQ,EAAEC,IAAI,EAAEC,IAAI,QAAQ,YAAY;AACzF,MAAMC,UAAU,GAAG,CAAC;EAAEC,iBAAiB,GAAG,CAAC;EAAEC,kBAAkB,GAAG,CAAC;AACnE,OAAO,MAAMC,SAAS,CAAC;EACnBC,IAAIA,CAACC,QAAQ,EAAE;IACX,MAAMC,OAAO,GAAGD,QAAQ,CAACC,OAAO;MAAEC,cAAc,GAAGD,OAAO,CAACR,IAAI,CAACU,OAAO;IACvEH,QAAQ,CAACG,OAAO,GAAG;MACfC,MAAM,EAAEF,cAAc,CAACE,MAAM;MAC7BC,YAAY,EAAEhB,aAAa,CAACa,cAAc,CAACG,YAAY,CAAC;MACxDC,OAAO,EAAEJ,cAAc,CAACI;IAC5B,CAAC;IACDd,QAAQ,CAACQ,QAAQ,CAAC;EACtB;EACAO,SAASA,CAACP,QAAQ,EAAE;IAChB,OAAO,CAACA,QAAQ,CAACQ,SAAS,IAAIR,QAAQ,CAACC,OAAO,CAACR,IAAI,CAACW,MAAM;EAC9D;EACAX,IAAIA,CAACO,QAAQ,EAAES,KAAK,EAAE;IAAA,IAAAC,gBAAA,EAAAC,qBAAA,EAAAC,iBAAA,EAAAC,qBAAA,EAAAC,qBAAA;IAClB,MAAMC,eAAe,GAAGf,QAAQ,CAACC,OAAO;MAAEe,WAAW,GAAGD,eAAe,CAACtB,IAAI;IAC5E,IAAI,CAACuB,WAAW,CAACZ,MAAM,EAAE;MACrB;IACJ;IACA,MAAMa,SAAS,GAAGjB,QAAQ,CAACiB,SAAS;MAAEC,OAAO,GAAGD,SAAS,CAACE,MAAM,CAACC,UAAU;IAC3E,CAAAT,qBAAA,IAAAD,gBAAA,GAAAV,QAAQ,CAACmB,MAAM,EAACE,SAAS,cAAAV,qBAAA,cAAAA,qBAAA,GAAzBD,gBAAA,CAAgBW,SAAS,GAAKhC,aAAa,CAAC2B,WAAW,CAACM,KAAK,CAAC,GAAGJ,OAAO;IACxE,CAAAL,qBAAA,IAAAD,iBAAA,GAAAZ,QAAQ,CAACmB,MAAM,EAACI,SAAS,cAAAV,qBAAA,cAAAA,qBAAA,GAAzBD,iBAAA,CAAgBW,SAAS,GAAKlC,aAAa,CAACW,QAAQ,CAACC,OAAO,CAACR,IAAI,CAAC+B,KAAK,CAAC,GAAGN,OAAO;IAClF,MAAMO,UAAU,GAAGlC,uBAAuB,CAACS,QAAQ,CAAC;MAAE0B,SAAS,GAAG1B,QAAQ,CAACmB,MAAM,CAACE,SAAS,GAAGJ,SAAS,CAACE,MAAM,CAACQ,YAAY;MAAEJ,SAAS,GAAGvB,QAAQ,CAACmB,MAAM,CAACI,SAAS;MAAEK,OAAO,GAAGxC,WAAW,CAAC2B,eAAe,CAACc,IAAI,CAACC,KAAK,CAAC,GAAGZ,OAAO;MAAEa,UAAU,GAAGf,WAAW,CAACa,IAAI,GAAG7B,QAAQ,CAACgC,SAAS,CAAC,CAAC,GAAGJ,OAAO,GAAGhC,iBAAiB;MAAEqC,WAAW,GAAGxB,KAAK,CAACyB,MAAM,IAAIrC,kBAAkB;MAAEwB,SAAS,GAAIK,SAAS,GAAGK,UAAU,GAAGN,UAAU,GAAGQ,WAAW,GAAItC,UAAU;MAAEwC,QAAQ,IAAArB,qBAAA,GAAGd,QAAQ,CAACmB,MAAM,CAACgB,QAAQ,cAAArB,qBAAA,cAAAA,qBAAA,GAAIG,SAAS,CAACE,MAAM,CAACgB,QAAQ;IACrf,IAAInB,WAAW,CAACtB,IAAI,CAACU,MAAM,EAAE;MACzBV,IAAI,CAACM,QAAQ,EAAEqB,SAAS,CAAC;IAC7B,CAAC,MACI;MACD5B,IAAI,CAACO,QAAQ,EAAEgB,WAAW,EAAEK,SAAS,EAAEc,QAAQ,EAAEZ,SAAS,EAAEd,KAAK,CAAC;IACtE;IACAnB,aAAa,CAACU,QAAQ,CAAC;EAC3B;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}