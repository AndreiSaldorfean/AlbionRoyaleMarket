{"ast":null,"code":"import { getRandom, getRangeValue, initParticleNumericAnimationValue, percentDenominator, updateAnimation } from \"@tsparticles/engine\";\nexport class OpacityUpdater {\n  constructor(container) {\n    this.container = container;\n  }\n  init(particle) {\n    const opacityOptions = particle.options.opacity,\n      pxRatio = 1;\n    particle.opacity = initParticleNumericAnimationValue(opacityOptions, pxRatio);\n    const opacityAnimation = opacityOptions.animation;\n    if (opacityAnimation.enable) {\n      particle.opacity.velocity = getRangeValue(opacityAnimation.speed) / percentDenominator * this.container.retina.reduceFactor;\n      if (!opacityAnimation.sync) {\n        particle.opacity.velocity *= getRandom();\n      }\n    }\n  }\n  isEnabled(particle) {\n    var _particle$opacity$max, _particle$opacity$max2, _particle$opacity$loo, _particle$opacity$max3;\n    const none = 0;\n    return !particle.destroyed && !particle.spawning && !!particle.opacity && particle.opacity.enable && (((_particle$opacity$max = particle.opacity.maxLoops) !== null && _particle$opacity$max !== void 0 ? _particle$opacity$max : none) <= none || ((_particle$opacity$max2 = particle.opacity.maxLoops) !== null && _particle$opacity$max2 !== void 0 ? _particle$opacity$max2 : none) > none && ((_particle$opacity$loo = particle.opacity.loops) !== null && _particle$opacity$loo !== void 0 ? _particle$opacity$loo : none) < ((_particle$opacity$max3 = particle.opacity.maxLoops) !== null && _particle$opacity$max3 !== void 0 ? _particle$opacity$max3 : none));\n  }\n  reset(particle) {\n    if (particle.opacity) {\n      particle.opacity.time = 0;\n      particle.opacity.loops = 0;\n    }\n  }\n  update(particle, delta) {\n    if (!this.isEnabled(particle) || !particle.opacity) {\n      return;\n    }\n    updateAnimation(particle, particle.opacity, true, particle.options.opacity.animation.destroy, delta);\n  }\n}","map":{"version":3,"names":["getRandom","getRangeValue","initParticleNumericAnimationValue","percentDenominator","updateAnimation","OpacityUpdater","constructor","container","init","particle","opacityOptions","options","opacity","pxRatio","opacityAnimation","animation","enable","velocity","speed","retina","reduceFactor","sync","isEnabled","_particle$opacity$max","_particle$opacity$max2","_particle$opacity$loo","_particle$opacity$max3","none","destroyed","spawning","maxLoops","loops","reset","time","update","delta","destroy"],"sources":["C:/nginx/html/AlbionRoyaleMarket/albion_royale_market_website/node_modules/@tsparticles/updater-opacity/browser/OpacityUpdater.js"],"sourcesContent":["import { getRandom, getRangeValue, initParticleNumericAnimationValue, percentDenominator, updateAnimation, } from \"@tsparticles/engine\";\nexport class OpacityUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const opacityOptions = particle.options.opacity, pxRatio = 1;\n        particle.opacity = initParticleNumericAnimationValue(opacityOptions, pxRatio);\n        const opacityAnimation = opacityOptions.animation;\n        if (opacityAnimation.enable) {\n            particle.opacity.velocity =\n                (getRangeValue(opacityAnimation.speed) / percentDenominator) * this.container.retina.reduceFactor;\n            if (!opacityAnimation.sync) {\n                particle.opacity.velocity *= getRandom();\n            }\n        }\n    }\n    isEnabled(particle) {\n        const none = 0;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            !!particle.opacity &&\n            particle.opacity.enable &&\n            ((particle.opacity.maxLoops ?? none) <= none ||\n                ((particle.opacity.maxLoops ?? none) > none &&\n                    (particle.opacity.loops ?? none) < (particle.opacity.maxLoops ?? none))));\n    }\n    reset(particle) {\n        if (particle.opacity) {\n            particle.opacity.time = 0;\n            particle.opacity.loops = 0;\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle) || !particle.opacity) {\n            return;\n        }\n        updateAnimation(particle, particle.opacity, true, particle.options.opacity.animation.destroy, delta);\n    }\n}\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,aAAa,EAAEC,iCAAiC,EAAEC,kBAAkB,EAAEC,eAAe,QAAS,qBAAqB;AACvI,OAAO,MAAMC,cAAc,CAAC;EACxBC,WAAWA,CAACC,SAAS,EAAE;IACnB,IAAI,CAACA,SAAS,GAAGA,SAAS;EAC9B;EACAC,IAAIA,CAACC,QAAQ,EAAE;IACX,MAAMC,cAAc,GAAGD,QAAQ,CAACE,OAAO,CAACC,OAAO;MAAEC,OAAO,GAAG,CAAC;IAC5DJ,QAAQ,CAACG,OAAO,GAAGV,iCAAiC,CAACQ,cAAc,EAAEG,OAAO,CAAC;IAC7E,MAAMC,gBAAgB,GAAGJ,cAAc,CAACK,SAAS;IACjD,IAAID,gBAAgB,CAACE,MAAM,EAAE;MACzBP,QAAQ,CAACG,OAAO,CAACK,QAAQ,GACpBhB,aAAa,CAACa,gBAAgB,CAACI,KAAK,CAAC,GAAGf,kBAAkB,GAAI,IAAI,CAACI,SAAS,CAACY,MAAM,CAACC,YAAY;MACrG,IAAI,CAACN,gBAAgB,CAACO,IAAI,EAAE;QACxBZ,QAAQ,CAACG,OAAO,CAACK,QAAQ,IAAIjB,SAAS,CAAC,CAAC;MAC5C;IACJ;EACJ;EACAsB,SAASA,CAACb,QAAQ,EAAE;IAAA,IAAAc,qBAAA,EAAAC,sBAAA,EAAAC,qBAAA,EAAAC,sBAAA;IAChB,MAAMC,IAAI,GAAG,CAAC;IACd,OAAQ,CAAClB,QAAQ,CAACmB,SAAS,IACvB,CAACnB,QAAQ,CAACoB,QAAQ,IAClB,CAAC,CAACpB,QAAQ,CAACG,OAAO,IAClBH,QAAQ,CAACG,OAAO,CAACI,MAAM,KACtB,EAAAO,qBAAA,GAACd,QAAQ,CAACG,OAAO,CAACkB,QAAQ,cAAAP,qBAAA,cAAAA,qBAAA,GAAII,IAAI,KAAKA,IAAI,IACvC,EAAAH,sBAAA,GAACf,QAAQ,CAACG,OAAO,CAACkB,QAAQ,cAAAN,sBAAA,cAAAA,sBAAA,GAAIG,IAAI,IAAIA,IAAI,IACvC,EAAAF,qBAAA,GAAChB,QAAQ,CAACG,OAAO,CAACmB,KAAK,cAAAN,qBAAA,cAAAA,qBAAA,GAAIE,IAAI,MAAAD,sBAAA,GAAKjB,QAAQ,CAACG,OAAO,CAACkB,QAAQ,cAAAJ,sBAAA,cAAAA,sBAAA,GAAIC,IAAI,CAAE,CAAC;EACxF;EACAK,KAAKA,CAACvB,QAAQ,EAAE;IACZ,IAAIA,QAAQ,CAACG,OAAO,EAAE;MAClBH,QAAQ,CAACG,OAAO,CAACqB,IAAI,GAAG,CAAC;MACzBxB,QAAQ,CAACG,OAAO,CAACmB,KAAK,GAAG,CAAC;IAC9B;EACJ;EACAG,MAAMA,CAACzB,QAAQ,EAAE0B,KAAK,EAAE;IACpB,IAAI,CAAC,IAAI,CAACb,SAAS,CAACb,QAAQ,CAAC,IAAI,CAACA,QAAQ,CAACG,OAAO,EAAE;MAChD;IACJ;IACAR,eAAe,CAACK,QAAQ,EAAEA,QAAQ,CAACG,OAAO,EAAE,IAAI,EAAEH,QAAQ,CAACE,OAAO,CAACC,OAAO,CAACG,SAAS,CAACqB,OAAO,EAAED,KAAK,CAAC;EACxG;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}